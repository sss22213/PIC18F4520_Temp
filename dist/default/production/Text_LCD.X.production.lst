

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Apr 11 23:17:26 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           	psect	smallconst
    33  000600                     __psmallconst:
    34                           	opt stack 0
    35  000600  00                 	db	0
    36  000601                     _tablexiao:
    37                           	opt stack 0
    38  000601  00                 	db	0
    39  000602  00                 	db	0
    40  000603  01                 	db	1
    41  000604  02                 	db	2
    42  000605  02                 	db	2
    43  000606  03                 	db	3
    44  000607  04                 	db	4
    45  000608  04                 	db	4
    46  000609  05                 	db	5
    47  00060A  06                 	db	6
    48  00060B  06                 	db	6
    49  00060C  07                 	db	7
    50  00060D  08                 	db	8
    51  00060E  08                 	db	8
    52  00060F  09                 	db	9
    53  000610  09                 	db	9
    54  000611                     __end_of_tablexiao:
    55                           	opt stack 0
    56  0000                     _ADCON1	set	4033
    57  0000                     _PORTC	set	3970
    58  0000                     _PORTD	set	3971
    59  0000                     _T1CON	set	4045
    60  0000                     _TMR1H	set	4047
    61  0000                     _TMR1L	set	4046
    62  0000                     _TRISA	set	3986
    63  0000                     _TRISB	set	3987
    64  0000                     _TRISC	set	3988
    65  0000                     _TRISD	set	3989
    66  0000                     _GIEH	set	32663
    67  0000                     _IPEN	set	32391
    68  0000                     _RA4	set	31748
    69  0000                     _RB3	set	31755
    70  0000                     _RB4	set	31756
    71  0000                     _RB5	set	31757
    72  0000                     _RC0	set	31760
    73  0000                     _RD7	set	31775
    74  0000                     _TMR1IE	set	31976
    75  0000                     _TMR1IF	set	31984
    76  0000                     _TMR1IP	set	31992
    77  0000                     _TRISA4	set	31892
    78  0000                     _TRISD7	set	31919
    79  000611                     __stringdata:
    80                           	opt stack 0
    81  000611                     STR_2:
    82  000611  4E                 	db	78	;'N'
    83  000612  6F                 	db	111	;'o'
    84  000613  77                 	db	119	;'w'
    85  000614  20                 	db	32
    86  000615  54                 	db	84	;'T'
    87  000616  69                 	db	105	;'i'
    88  000617  6D                 	db	109	;'m'
    89  000618  65                 	db	101	;'e'
    90  000619  3A                 	db	58	;':'
    91  00061A  00                 	db	0
    92  00061B                     STR_3:
    93  00061B  4E                 	db	78	;'N'
    94  00061C  6F                 	db	111	;'o'
    95  00061D  77                 	db	119	;'w'
    96  00061E  20                 	db	32
    97  00061F  54                 	db	84	;'T'
    98  000620  65                 	db	101	;'e'
    99  000621  6D                 	db	109	;'m'
   100  000622  70                 	db	112	;'p'
   101  000623  3A                 	db	58	;':'
   102  000624  00                 	db	0
   103  000625                     STR_1:
   104  000625  74                 	db	116	;'t'
   105  000626  72                 	db	114	;'r'
   106  000627  79                 	db	121	;'y'
   107  000628  5F                 	db	95	;'_'
   108  000629  4F                 	db	79	;'O'
   109  00062A  4B                 	db	75	;'K'
   110  00062B  00                 	db	0
   111  00062C                     STR_6:
   112  00062C  63                 	db	99	;'c'
   113  00062D  6F                 	db	111	;'o'
   114  00062E  6C                 	db	108	;'l'
   115  00062F  64                 	db	100	;'d'
   116  000630  00                 	db	0
   117  000631                     STR_4:
   118  000631  47                 	db	71	;'G'
   119  000632  6F                 	db	111	;'o'
   120  000633  6F                 	db	111	;'o'
   121  000634  64                 	db	100	;'d'
   122  000635  00                 	db	0
   123  000636                     STR_5:
   124  000636  68                 	db	104	;'h'
   125  000637  6F                 	db	111	;'o'
   126  000638  74                 	db	116	;'t'
   127  000639  00                 	db	0
   128  00063A                     __end_of__stringdata:
   129                           	opt stack 0
   130  00063A  00                 	db	0	; dummy byte at the end
   131  0000                     
   132                           ; #config settings
   133                           
   134                           	psect	cinit
   135  000D92                     __pcinit:
   136                           	opt stack 0
   137  000D92                     start_initialization:
   138                           	opt stack 0
   139  000D92                     __initialization:
   140                           	opt stack 0
   141                           
   142                           ; Clear objects allocated to COMRAM (10 bytes)
   143  000D92  EE00  F022         	lfsr	0,__pbssCOMRAM
   144  000D96  0E0A               	movlw	10
   145  000D98                     clear_0:
   146  000D98  6AEE               	clrf	postinc0,c
   147  000D9A  06E8               	decf	wreg,f,c
   148  000D9C  E1FD               	bnz	clear_0
   149  000D9E                     end_of_initialization:
   150                           	opt stack 0
   151  000D9E                     __end_of__initialization:
   152                           	opt stack 0
   153  000D9E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   154  000DA0  6EF8               	movwf	tblptru,c
   155  000DA2  0E06               	movlw	high __Lsmallconst
   156  000DA4  6EF7               	movwf	tblptrh,c
   157  000DA6  0100               	movlb	0
   158  000DA8  EF63  F005         	goto	_main	;jump to C main() function
   159                           tblptru	equ	0xFF8
   160                           tblptrh	equ	0xFF7
   161                           postinc0	equ	0xFEE
   162                           wreg	equ	0xFE8
   163                           
   164                           	psect	bssCOMRAM
   165  000022                     __pbssCOMRAM:
   166                           	opt stack 0
   167  000022                     _count:
   168                           	opt stack 0
   169  000022                     	ds	2
   170  000024                     _hour:
   171                           	opt stack 0
   172  000024                     	ds	2
   173  000026                     _min:
   174                           	opt stack 0
   175  000026                     	ds	2
   176  000028                     _sec:
   177                           	opt stack 0
   178  000028                     	ds	2
   179  00002A                     _Temp1:
   180                           	opt stack 0
   181  00002A                     	ds	1
   182  00002B                     _Temp2:
   183                           	opt stack 0
   184  00002B                     	ds	1
   185                           tblptru	equ	0xFF8
   186                           tblptrh	equ	0xFF7
   187                           postinc0	equ	0xFEE
   188                           wreg	equ	0xFE8
   189                           
   190                           	psect	cstackCOMRAM
   191  000001                     __pcstackCOMRAM:
   192                           	opt stack 0
   193  000001                     ??_HighInt:
   194  000001                     
   195                           ; 2 bytes @ 0x0
   196  000001                     	ds	14
   197  00000F                     ?___awdiv:
   198                           	opt stack 0
   199  00000F                     ?___awmod:
   200                           	opt stack 0
   201  00000F                     write_com@data:
   202                           	opt stack 0
   203  00000F                     write_data@data:
   204                           	opt stack 0
   205  00000F                     reset@out:
   206                           	opt stack 0
   207  00000F                     Write_bit@k:
   208                           	opt stack 0
   209  00000F                     Read_bit@k:
   210                           	opt stack 0
   211  00000F                     ___delay_s@t:
   212                           	opt stack 0
   213  00000F                     ___awdiv@dividend:
   214                           	opt stack 0
   215  00000F                     ___awmod@dividend:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0xE
   219  00000F                     	ds	1
   220  000010                     ??_LCD_init:
   221  000010                     Write_bit@data:
   222                           	opt stack 0
   223  000010                     Read_bit@i:
   224                           	opt stack 0
   225                           
   226                           ; 2 bytes @ 0xF
   227  000010                     	ds	1
   228  000011                     ??___delay_s:
   229  000011                     Write_bit@i:
   230                           	opt stack 0
   231  000011                     ___awdiv@divisor:
   232                           	opt stack 0
   233  000011                     ___awmod@divisor:
   234                           	opt stack 0
   235                           
   236                           ; 2 bytes @ 0x10
   237  000011                     	ds	1
   238  000012                     ??_ConvertT:
   239  000012                     ??_read_T:
   240  000012                     ___delay_s@i:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x11
   244  000012                     	ds	1
   245  000013                     read_T@MSB:
   246                           	opt stack 0
   247  000013                     ___awdiv@counter:
   248                           	opt stack 0
   249  000013                     ___awmod@counter:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x12
   253  000013                     	ds	1
   254  000014                     read_T@LSB:
   255                           	opt stack 0
   256  000014                     ___awdiv@sign:
   257                           	opt stack 0
   258  000014                     ___awmod@sign:
   259                           	opt stack 0
   260                           
   261                           ; 1 bytes @ 0x13
   262  000014                     	ds	1
   263  000015                     ___awdiv@quotient:
   264                           	opt stack 0
   265                           
   266                           ; 2 bytes @ 0x14
   267  000015                     	ds	2
   268  000017                     dispalay@data:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x16
   272  000017                     	ds	1
   273  000018                     dispalay@x:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x17
   277  000018                     	ds	1
   278  000019                     dispalay_string@sp:
   279                           	opt stack 0
   280                           
   281                           ; 2 bytes @ 0x18
   282  000019                     	ds	2
   283  00001B                     dispalay_string@start_addr:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x1A
   287  00001B                     	ds	1
   288  00001C                     ??_dispalay_string:
   289                           
   290                           ; 0 bytes @ 0x1B
   291  00001C                     	ds	2
   292  00001E                     dispalay_string@str_length:
   293                           	opt stack 0
   294                           
   295                           ; 2 bytes @ 0x1D
   296  00001E                     	ds	2
   297  000020                     ??_Time_display:
   298                           
   299                           ; 0 bytes @ 0x1F
   300  000020                     	ds	1
   301  000021                     Time_display@buf:
   302                           	opt stack 0
   303                           
   304                           ; 1 bytes @ 0x20
   305  000021                     	ds	1
   306  000022                     tblptru	equ	0xFF8
   307                           tblptrh	equ	0xFF7
   308                           postinc0	equ	0xFEE
   309                           wreg	equ	0xFE8
   310                           
   311                           ; 0 bytes @ 0x21
   312 ;;
   313 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   314 ;;
   315 ;; *************** function _main *****************
   316 ;; Defined at:
   317 ;;		line 17 in file "main.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;		None
   320 ;; Auto vars:     Size  Location     Type
   321 ;;		None
   322 ;; Return value:  Size  Location     Type
   323 ;;                  2   66[COMRAM] int 
   324 ;; Registers used:
   325 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   331 ;;      Params:         0       0       0       0       0       0       0
   332 ;;      Locals:         0       0       0       0       0       0       0
   333 ;;      Temps:          0       0       0       0       0       0       0
   334 ;;      Totals:         0       0       0       0       0       0       0
   335 ;;Total ram usage:        0 bytes
   336 ;; Hardware stack levels required when called:    6
   337 ;; This function calls:
   338 ;;		_Clean_screen
   339 ;;		_Clock_display
   340 ;;		_LCD_init
   341 ;;		_Time_display
   342 ;;		___awmod
   343 ;;		___delay_s
   344 ;;		_dispalay_string
   345 ;; This function is called by:
   346 ;;		Startup code after reset
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           	psect	text0
   351  000AC6                     __ptext0:
   352                           	opt stack 0
   353  000AC6                     _main:
   354                           	opt stack 25
   355                           
   356                           ;main.c: 23: ADCON1=0x0F;
   357                           
   358                           ;incstack = 0
   359  000AC6  0E0F               	movlw	15
   360  000AC8  6EC1               	movwf	4033,c	;volatile
   361                           
   362                           ;main.c: 24: TRISA=0xFF;
   363  000ACA  6892               	setf	3986,c	;volatile
   364                           
   365                           ;main.c: 25: TRISD=0x00;
   366  000ACC  0E00               	movlw	0
   367  000ACE  6E95               	movwf	3989,c	;volatile
   368                           
   369                           ;main.c: 26: TRISB=0x00;
   370  000AD0  0E00               	movlw	0
   371  000AD2  6E93               	movwf	3987,c	;volatile
   372                           
   373                           ;main.c: 29: LCD_init();
   374  000AD4  ECAA  F005         	call	_LCD_init	;wreg free
   375                           
   376                           ;main.c: 33: T1CON=0B11111101;
   377  000AD8  0EFD               	movlw	253
   378  000ADA  6ECD               	movwf	4045,c	;volatile
   379                           
   380                           ;main.c: 35: TMR1H=(65536-62500)/256;
   381  000ADC  0E0B               	movlw	11
   382  000ADE  6ECF               	movwf	4047,c	;volatile
   383                           
   384                           ;main.c: 36: TMR1L=(65536-62500)%256;
   385  000AE0  0EDC               	movlw	220
   386  000AE2  6ECE               	movwf	4046,c	;volatile
   387                           
   388                           ;main.c: 38: TMR1IF=0;
   389  000AE4  909E               	bcf	3998,0,c	;volatile
   390                           
   391                           ;main.c: 39: TMR1IP=1;
   392  000AE6  809F               	bsf	3999,0,c	;volatile
   393                           
   394                           ;main.c: 40: TMR1IE=1;
   395  000AE8  809D               	bsf	3997,0,c	;volatile
   396                           
   397                           ;main.c: 42: IPEN=1;
   398  000AEA  8ED0               	bsf	4048,7,c	;volatile
   399                           
   400                           ;main.c: 43: GIEH=1;
   401  000AEC  8EF2               	bsf	intcon,7,c	;volatile
   402                           
   403                           ;main.c: 44: TRISC=0xFF;
   404  000AEE  6894               	setf	3988,c	;volatile
   405  000AF0                     l1151:
   406                           
   407                           ;main.c: 47: {
   408                           ;main.c: 48: Clock_display();
   409  000AF0  ECEB  F003         	call	_Clock_display	;wreg free
   410                           
   411                           ;main.c: 50: if(sec%20==0)
   412  000AF4  C028  F00F         	movff	_sec,___awmod@dividend
   413  000AF8  C029  F010         	movff	_sec+1,___awmod@dividend+1
   414  000AFC  0E00               	movlw	0
   415  000AFE  6E12               	movwf	___awmod@divisor+1,c
   416  000B00  0E14               	movlw	20
   417  000B02  6E11               	movwf	___awmod@divisor,c
   418  000B04  EC1B  F005         	call	___awmod	;wreg free
   419  000B08  5010               	movf	?___awmod+1,w,c
   420  000B0A  100F               	iorwf	?___awmod,w,c
   421  000B0C  A4D8               	btfss	status,2,c
   422  000B0E  D00C               	goto	l1163
   423                           
   424                           ;main.c: 51: {
   425                           ;main.c: 52: Clean_screen();
   426  000B10  EC00  F007         	call	_Clean_screen	;wreg free
   427                           
   428                           ;main.c: 53: Time_display();
   429  000B14  EC1E  F003         	call	_Time_display	;wreg free
   430                           
   431                           ;main.c: 54: __delay_s(2);
   432  000B18  0E00               	movlw	0
   433  000B1A  6E10               	movwf	___delay_s@t+1,c
   434  000B1C  0E02               	movlw	2
   435  000B1E  6E0F               	movwf	___delay_s@t,c
   436  000B20  EC41  F006         	call	___delay_s	;wreg free
   437                           
   438                           ;main.c: 55: Clean_screen();
   439  000B24  EC00  F007         	call	_Clean_screen	;wreg free
   440  000B28                     l1163:
   441                           
   442                           ;main.c: 56: }
   443                           ;main.c: 57: if(sec==10)
   444  000B28  5028               	movf	_sec,w,c
   445  000B2A  0A0A               	xorlw	10
   446  000B2C  1029               	iorwf	_sec+1,w,c
   447  000B2E  A4D8               	btfss	status,2,c
   448  000B30  D7DF               	goto	l1151
   449                           
   450                           ;main.c: 58: {
   451                           ;main.c: 60: TMR1IE=0;
   452  000B32  909D               	bcf	3997,0,c	;volatile
   453                           
   454                           ;main.c: 61: TRISC=0x00;
   455  000B34  0E00               	movlw	0
   456  000B36  6E94               	movwf	3988,c	;volatile
   457                           
   458                           ;main.c: 62: PORTC=0xFF;
   459  000B38  6882               	setf	3970,c	;volatile
   460                           
   461                           ;main.c: 63: TRISC=0xFF;
   462  000B3A  6894               	setf	3988,c	;volatile
   463                           
   464                           ;main.c: 64: if(RC0==0)
   465  000B3C  B082               	btfsc	3970,0,c	;volatile
   466  000B3E  D008               	goto	l1177
   467                           
   468                           ;main.c: 65: {
   469                           ;main.c: 66: dispalay_string("try_OK",0xC0);
   470  000B40  0E06               	movlw	high STR_1
   471  000B42  6E1A               	movwf	dispalay_string@sp+1,c
   472  000B44  0E25               	movlw	low STR_1
   473  000B46  6E19               	movwf	dispalay_string@sp,c
   474  000B48  0EC0               	movlw	192
   475  000B4A  6E1B               	movwf	dispalay_string@start_addr,c
   476  000B4C  ECE5  F005         	call	_dispalay_string	;wreg free
   477  000B50                     l1177:
   478                           
   479                           ;main.c: 67: }
   480                           ;main.c: 69: TMR1IE=1;
   481  000B50  809D               	bsf	3997,0,c	;volatile
   482  000B52  D7CE               	goto	l1151
   483  000B54                     __end_of_main:
   484                           	opt stack 0
   485                           tblptru	equ	0xFF8
   486                           tblptrh	equ	0xFF7
   487                           intcon	equ	0xFF2
   488                           postinc0	equ	0xFEE
   489                           wreg	equ	0xFE8
   490                           status	equ	0xFD8
   491                           
   492 ;; *************** function ___delay_s *****************
   493 ;; Defined at:
   494 ;;		line 75 in file "main.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;  t               2   14[COMRAM] int 
   497 ;; Auto vars:     Size  Location     Type
   498 ;;  i               2   17[COMRAM] int 
   499 ;; Return value:  Size  Location     Type
   500 ;;		None               void
   501 ;; Registers used:
   502 ;;		wreg, status,2, status,0, prodl
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   508 ;;      Params:         2       0       0       0       0       0       0
   509 ;;      Locals:         2       0       0       0       0       0       0
   510 ;;      Temps:          1       0       0       0       0       0       0
   511 ;;      Totals:         5       0       0       0       0       0       0
   512 ;;Total ram usage:        5 bytes
   513 ;; Hardware stack levels used:    1
   514 ;; Hardware stack levels required when called:    1
   515 ;; This function calls:
   516 ;;		Nothing
   517 ;; This function is called by:
   518 ;;		_main
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text1
   523  000C82                     __ptext1:
   524                           	opt stack 0
   525  000C82                     ___delay_s:
   526                           	opt stack 29
   527                           
   528                           ;main.c: 77: for(;t>0;t--)
   529                           
   530                           ;incstack = 0
   531  000C82  5010               	movf	___delay_s@t+1,w,c
   532  000C84  0A80               	xorlw	128
   533  000C86  6EF3               	movwf	prodl,c
   534  000C88  0E80               	movlw	128
   535  000C8A  5CF3               	subwf	prodl,w,c
   536  000C8C  0E01               	movlw	1
   537  000C8E  B4D8               	btfsc	status,2,c
   538  000C90  5C0F               	subwf	___delay_s@t,w,c
   539  000C92  A0D8               	btfss	status,0,c
   540  000C94  D01A               	goto	l80
   541                           
   542                           ;main.c: 78: {
   543                           ;main.c: 79: for(int i=0;i<10;i++)
   544  000C96  0E00               	movlw	0
   545  000C98  6E13               	movwf	___delay_s@i+1,c
   546  000C9A  0E00               	movlw	0
   547  000C9C  6E12               	movwf	___delay_s@i,c
   548  000C9E  5013               	movf	___delay_s@i+1,w,c
   549  000CA0  0A80               	xorlw	128
   550  000CA2  0F80               	addlw	-128
   551  000CA4  0E0A               	movlw	10
   552  000CA6  B4D8               	btfsc	status,2,c
   553  000CA8  5C12               	subwf	___delay_s@i,w,c
   554  000CAA  B0D8               	btfsc	status,0,c
   555  000CAC  D00A               	goto	l1123
   556                           
   557                           ;main.c: 80: {
   558                           ;main.c: 81: _delay((unsigned long)((100)*(4000000/4000.0)));
   559  000CAE  0E82               	movlw	130
   560  000CB0  6E11               	movwf	??___delay_s& (0+255),c
   561  000CB2  0EDE               	movlw	222
   562  000CB4                     u417:
   563  000CB4  2EE8               	decfsz	wreg,f,c
   564  000CB6  D7FE               	goto	u417
   565  000CB8  2E11               	decfsz	??___delay_s& (0+255),f,c
   566  000CBA  D7FC               	goto	u417
   567  000CBC  4A12               	infsnz	___delay_s@i,f,c
   568  000CBE  2A13               	incf	___delay_s@i+1,f,c
   569  000CC0  D7EE               	goto	L1
   570  000CC2                     l1123:
   571  000CC2  060F               	decf	___delay_s@t,f,c
   572  000CC4  A0D8               	btfss	status,0,c
   573  000CC6  0610               	decf	___delay_s@t+1,f,c
   574  000CC8  D7DC               	goto	___delay_s
   575  000CCA                     l80:
   576  000CCA  0012               	return	
   577  000CCC                     __end_of___delay_s:
   578                           	opt stack 0
   579                           tblptru	equ	0xFF8
   580                           tblptrh	equ	0xFF7
   581                           prodl	equ	0xFF3
   582                           intcon	equ	0xFF2
   583                           postinc0	equ	0xFEE
   584                           wreg	equ	0xFE8
   585                           status	equ	0xFD8
   586                           
   587 ;; *************** function _Time_display *****************
   588 ;; Defined at:
   589 ;;		line 140 in file "main.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;  buf             1   32[COMRAM] unsigned char 
   594 ;; Return value:  Size  Location     Type
   595 ;;		None               void
   596 ;; Registers used:
   597 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   603 ;;      Params:         0       0       0       0       0       0       0
   604 ;;      Locals:         1       0       0       0       0       0       0
   605 ;;      Temps:          1       0       0       0       0       0       0
   606 ;;      Totals:         2       0       0       0       0       0       0
   607 ;;Total ram usage:        2 bytes
   608 ;; Hardware stack levels used:    1
   609 ;; Hardware stack levels required when called:    5
   610 ;; This function calls:
   611 ;;		_ConvertT
   612 ;;		___awdiv
   613 ;;		___awmod
   614 ;;		_dispalay
   615 ;;		_dispalay_string
   616 ;;		_read_T
   617 ;; This function is called by:
   618 ;;		_main
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           	psect	text2
   623  00063C                     __ptext2:
   624                           	opt stack 0
   625  00063C                     _Time_display:
   626                           	opt stack 25
   627                           
   628                           ;main.c: 143: dispalay_string("Now Temp:",0x80);
   629                           
   630                           ;incstack = 0
   631  00063C  0E06               	movlw	high STR_3
   632  00063E  6E1A               	movwf	dispalay_string@sp+1,c
   633  000640  0E1B               	movlw	low STR_3
   634  000642  6E19               	movwf	dispalay_string@sp,c
   635  000644  0E80               	movlw	128
   636  000646  6E1B               	movwf	dispalay_string@start_addr,c
   637  000648  ECE5  F005         	call	_dispalay_string	;wreg free
   638                           
   639                           ;main.c: 145: unsigned char buf;
   640                           ;main.c: 147: ConvertT();
   641  00064C  ECD6  F006         	call	_ConvertT	;wreg free
   642                           
   643                           ;main.c: 149: _delay((unsigned long)((94)*(4000000/4000.0)));
   644  000650  0E7B               	movlw	123
   645  000652  6E20               	movwf	??_Time_display& (0+255),c
   646  000654  0E12               	movlw	18
   647  000656                     u427:
   648  000656  2EE8               	decfsz	wreg,f,c
   649  000658  D7FE               	goto	u427
   650  00065A  2E20               	decfsz	??_Time_display& (0+255),f,c
   651  00065C  D7FC               	goto	u427
   652  00065E  D000               	nop2	
   653                           
   654                           ;main.c: 150: read_T();
   655  000660  EC66  F006         	call	_read_T	;wreg free
   656                           
   657                           ;main.c: 152: buf= Temp1/10;
   658  000664  C02A  F00F         	movff	_Temp1,___awdiv@dividend
   659  000668  6A10               	clrf	___awdiv@dividend+1,c
   660  00066A  0E00               	movlw	0
   661  00066C  6E12               	movwf	___awdiv@divisor+1,c
   662  00066E  0E0A               	movlw	10
   663  000670  6E11               	movwf	___awdiv@divisor,c
   664  000672  EC7A  F004         	call	___awdiv	;wreg free
   665  000676  500F               	movf	?___awdiv,w,c
   666  000678  6E21               	movwf	Time_display@buf,c
   667                           
   668                           ;main.c: 153: buf+=0x30;
   669  00067A  0E30               	movlw	48
   670  00067C  2621               	addwf	Time_display@buf,f,c
   671                           
   672                           ;main.c: 154: dispalay(0xC0,buf);
   673  00067E  C021  F017         	movff	Time_display@buf,dispalay@data
   674  000682  0EC0               	movlw	192
   675  000684  ECBB  F006         	call	_dispalay
   676                           
   677                           ;main.c: 155: buf=Temp1%10;
   678  000688  C02A  F00F         	movff	_Temp1,___awmod@dividend
   679  00068C  6A10               	clrf	___awmod@dividend+1,c
   680  00068E  0E00               	movlw	0
   681  000690  6E12               	movwf	___awmod@divisor+1,c
   682  000692  0E0A               	movlw	10
   683  000694  6E11               	movwf	___awmod@divisor,c
   684  000696  EC1B  F005         	call	___awmod	;wreg free
   685  00069A  500F               	movf	?___awmod,w,c
   686  00069C  6E21               	movwf	Time_display@buf,c
   687                           
   688                           ;main.c: 156: buf+=0x30;
   689  00069E  0E30               	movlw	48
   690  0006A0  2621               	addwf	Time_display@buf,f,c
   691                           
   692                           ;main.c: 157: dispalay(0xC1,buf);
   693  0006A2  C021  F017         	movff	Time_display@buf,dispalay@data
   694  0006A6  0EC1               	movlw	193
   695  0006A8  ECBB  F006         	call	_dispalay
   696                           
   697                           ;main.c: 158: dispalay(0xC2,'.');
   698  0006AC  0E2E               	movlw	46
   699  0006AE  6E17               	movwf	dispalay@data,c
   700  0006B0  0EC2               	movlw	194
   701  0006B2  ECBB  F006         	call	_dispalay
   702                           
   703                           ;main.c: 159: buf=tablexiao[Temp2];
   704  0006B6  502B               	movf	_Temp2,w,c
   705  0006B8  0D01               	mullw	1
   706  0006BA  0E01               	movlw	low _tablexiao
   707  0006BC  24F3               	addwf	prodl,w,c
   708  0006BE  6EF6               	movwf	tblptrl,c
   709  0006C0  0E06               	movlw	high _tablexiao
   710  0006C2  20F4               	addwfc	prodh,w,c
   711  0006C4  6EF7               	movwf	tblptrh,c
   712  0006C6                     	if	0	;There are less than 3 active tblptr bytes
   713  0006C6                     	endif
   714  0006C6  0008               	tblrd		*
   715  0006C8  CFF5 F021          	movff	tablat,Time_display@buf
   716                           
   717                           ;main.c: 160: buf+=0x30;
   718  0006CC  0E30               	movlw	48
   719  0006CE  2621               	addwf	Time_display@buf,f,c
   720                           
   721                           ;main.c: 161: dispalay(0xC3,buf);
   722  0006D0  C021  F017         	movff	Time_display@buf,dispalay@data
   723  0006D4  0EC3               	movlw	195
   724  0006D6  ECBB  F006         	call	_dispalay
   725                           
   726                           ;main.c: 162: dispalay(0xC4,0xDF);
   727  0006DA  0EDF               	movlw	223
   728  0006DC  6E17               	movwf	dispalay@data,c
   729  0006DE  0EC4               	movlw	196
   730  0006E0  ECBB  F006         	call	_dispalay
   731                           
   732                           ;main.c: 163: dispalay(0xC5,'C');
   733  0006E4  0E43               	movlw	67
   734  0006E6  6E17               	movwf	dispalay@data,c
   735  0006E8  0EC5               	movlw	197
   736  0006EA  ECBB  F006         	call	_dispalay
   737                           
   738                           ;main.c: 164: dispalay(0xC6,',');
   739  0006EE  0E2C               	movlw	44
   740  0006F0  6E17               	movwf	dispalay@data,c
   741  0006F2  0EC6               	movlw	198
   742  0006F4  ECBB  F006         	call	_dispalay
   743                           
   744                           ;main.c: 166: if(Temp1/10==2 && Temp1%10<7 && Temp1%10>4)
   745  0006F8  C02A  F00F         	movff	_Temp1,___awdiv@dividend
   746  0006FC  6A10               	clrf	___awdiv@dividend+1,c
   747  0006FE  0E00               	movlw	0
   748  000700  6E12               	movwf	___awdiv@divisor+1,c
   749  000702  0E0A               	movlw	10
   750  000704  6E11               	movwf	___awdiv@divisor,c
   751  000706  EC7A  F004         	call	___awdiv	;wreg free
   752  00070A  500F               	movf	?___awdiv,w,c
   753  00070C  0A02               	xorlw	2
   754  00070E  1010               	iorwf	?___awdiv+1,w,c
   755  000710  A4D8               	btfss	status,2,c
   756  000712  D02D               	goto	l1101
   757  000714  C02A  F00F         	movff	_Temp1,___awmod@dividend
   758  000718  6A10               	clrf	___awmod@dividend+1,c
   759  00071A  0E00               	movlw	0
   760  00071C  6E12               	movwf	___awmod@divisor+1,c
   761  00071E  0E0A               	movlw	10
   762  000720  6E11               	movwf	___awmod@divisor,c
   763  000722  EC1B  F005         	call	___awmod	;wreg free
   764  000726  5010               	movf	?___awmod+1,w,c
   765  000728  0A80               	xorlw	128
   766  00072A  6EF3               	movwf	prodl,c
   767  00072C  0E80               	movlw	128
   768  00072E  5CF3               	subwf	prodl,w,c
   769  000730  0E07               	movlw	7
   770  000732  B4D8               	btfsc	status,2,c
   771  000734  5C0F               	subwf	?___awmod,w,c
   772  000736  B0D8               	btfsc	status,0,c
   773  000738  D01A               	goto	l1101
   774  00073A  C02A  F00F         	movff	_Temp1,___awmod@dividend
   775  00073E  6A10               	clrf	___awmod@dividend+1,c
   776  000740  0E00               	movlw	0
   777  000742  6E12               	movwf	___awmod@divisor+1,c
   778  000744  0E0A               	movlw	10
   779  000746  6E11               	movwf	___awmod@divisor,c
   780  000748  EC1B  F005         	call	___awmod	;wreg free
   781  00074C  5010               	movf	?___awmod+1,w,c
   782  00074E  0A80               	xorlw	128
   783  000750  0F80               	addlw	-128
   784  000752  0E05               	movlw	5
   785  000754  B4D8               	btfsc	status,2,c
   786  000756  5C0F               	subwf	?___awmod,w,c
   787  000758  A0D8               	btfss	status,0,c
   788  00075A  D009               	goto	l1101
   789                           
   790                           ;main.c: 167: {
   791                           ;main.c: 168: dispalay_string("Good",0xC7);
   792  00075C  0E06               	movlw	high STR_4
   793  00075E  6E1A               	movwf	dispalay_string@sp+1,c
   794  000760  0E31               	movlw	low STR_4
   795  000762  6E19               	movwf	dispalay_string@sp,c
   796  000764  0EC7               	movlw	199
   797  000766  6E1B               	movwf	dispalay_string@start_addr,c
   798  000768  ECE5  F005         	call	_dispalay_string	;wreg free
   799                           
   800                           ;main.c: 170: }
   801  00076C  D033               	goto	l97
   802  00076E                     l1101:
   803                           
   804                           ;main.c: 171: else if(Temp1/10>1 && Temp1%10>5)
   805  00076E  C02A  F00F         	movff	_Temp1,___awdiv@dividend
   806  000772  6A10               	clrf	___awdiv@dividend+1,c
   807  000774  0E00               	movlw	0
   808  000776  6E12               	movwf	___awdiv@divisor+1,c
   809  000778  0E0A               	movlw	10
   810  00077A  6E11               	movwf	___awdiv@divisor,c
   811  00077C  EC7A  F004         	call	___awdiv	;wreg free
   812  000780  5010               	movf	?___awdiv+1,w,c
   813  000782  0A80               	xorlw	128
   814  000784  0F80               	addlw	-128
   815  000786  0E02               	movlw	2
   816  000788  B4D8               	btfsc	status,2,c
   817  00078A  5C0F               	subwf	?___awdiv,w,c
   818  00078C  A0D8               	btfss	status,0,c
   819  00078E  D01A               	goto	l1107
   820  000790  C02A  F00F         	movff	_Temp1,___awmod@dividend
   821  000794  6A10               	clrf	___awmod@dividend+1,c
   822  000796  0E00               	movlw	0
   823  000798  6E12               	movwf	___awmod@divisor+1,c
   824  00079A  0E0A               	movlw	10
   825  00079C  6E11               	movwf	___awmod@divisor,c
   826  00079E  EC1B  F005         	call	___awmod	;wreg free
   827  0007A2  5010               	movf	?___awmod+1,w,c
   828  0007A4  0A80               	xorlw	128
   829  0007A6  0F80               	addlw	-128
   830  0007A8  0E06               	movlw	6
   831  0007AA  B4D8               	btfsc	status,2,c
   832  0007AC  5C0F               	subwf	?___awmod,w,c
   833  0007AE  A0D8               	btfss	status,0,c
   834  0007B0  D009               	goto	l1107
   835                           
   836                           ;main.c: 172: {
   837                           ;main.c: 173: dispalay_string("hot",0xC7);
   838  0007B2  0E06               	movlw	high STR_5
   839  0007B4  6E1A               	movwf	dispalay_string@sp+1,c
   840  0007B6  0E36               	movlw	low STR_5
   841  0007B8  6E19               	movwf	dispalay_string@sp,c
   842  0007BA  0EC7               	movlw	199
   843  0007BC  6E1B               	movwf	dispalay_string@start_addr,c
   844  0007BE  ECE5  F005         	call	_dispalay_string	;wreg free
   845                           
   846                           ;main.c: 175: }
   847  0007C2  D008               	goto	l97
   848  0007C4                     l1107:
   849                           
   850                           ;main.c: 176: else
   851                           ;main.c: 177: {
   852                           ;main.c: 178: dispalay_string("cold",0xC7);
   853  0007C4  0E06               	movlw	high STR_6
   854  0007C6  6E1A               	movwf	dispalay_string@sp+1,c
   855  0007C8  0E2C               	movlw	low STR_6
   856  0007CA  6E19               	movwf	dispalay_string@sp,c
   857  0007CC  0EC7               	movlw	199
   858  0007CE  6E1B               	movwf	dispalay_string@start_addr,c
   859  0007D0  ECE5  F005         	call	_dispalay_string	;wreg free
   860  0007D4                     l97:
   861  0007D4  0012               	return	
   862  0007D6                     __end_of_Time_display:
   863                           	opt stack 0
   864                           tblptru	equ	0xFF8
   865                           tblptrh	equ	0xFF7
   866                           tblptrl	equ	0xFF6
   867                           tablat	equ	0xFF5
   868                           prodh	equ	0xFF4
   869                           prodl	equ	0xFF3
   870                           intcon	equ	0xFF2
   871                           postinc0	equ	0xFEE
   872                           wreg	equ	0xFE8
   873                           status	equ	0xFD8
   874                           
   875 ;; *************** function _read_T *****************
   876 ;; Defined at:
   877 ;;		line 92 in file "Temp.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  LSB             1   19[COMRAM] unsigned char 
   882 ;;  MSB             1   18[COMRAM] unsigned char 
   883 ;; Return value:  Size  Location     Type
   884 ;;		None               void
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   892 ;;      Params:         0       0       0       0       0       0       0
   893 ;;      Locals:         2       0       0       0       0       0       0
   894 ;;      Temps:          1       0       0       0       0       0       0
   895 ;;      Totals:         3       0       0       0       0       0       0
   896 ;;Total ram usage:        3 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; Hardware stack levels required when called:    2
   899 ;; This function calls:
   900 ;;		_Read_bit
   901 ;;		_Write_bit
   902 ;;		_reset
   903 ;; This function is called by:
   904 ;;		_Time_display
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text3
   909  000CCC                     __ptext3:
   910                           	opt stack 0
   911  000CCC                     _read_T:
   912                           	opt stack 27
   913                           
   914                           ;Temp.c: 95: unsigned char LSB,MSB;
   915                           ;Temp.c: 97: if(reset()==1)
   916                           
   917                           ;incstack = 0
   918  000CCC  ECA4  F006         	call	_reset	;wreg free
   919  000CD0  6E12               	movwf	??_read_T& (0+255),c
   920  000CD2  0412               	decf	??_read_T,w,c
   921  000CD4  A4D8               	btfss	status,2,c
   922  000CD6  D018               	goto	l179
   923                           
   924                           ;Temp.c: 98: {
   925                           ;Temp.c: 99: Write_bit(0xcc);
   926  000CD8  0ECC               	movlw	204
   927  000CDA  EC85  F006         	call	_Write_bit
   928                           
   929                           ;Temp.c: 100: Write_bit(0xbe);
   930  000CDE  0EBE               	movlw	190
   931  000CE0  EC85  F006         	call	_Write_bit
   932                           
   933                           ;Temp.c: 101: LSB=Read_bit();
   934  000CE4  EC1A  F006         	call	_Read_bit	;wreg free
   935  000CE8  6E14               	movwf	read_T@LSB,c
   936                           
   937                           ;Temp.c: 102: MSB=Read_bit();
   938  000CEA  EC1A  F006         	call	_Read_bit	;wreg free
   939  000CEE  6E13               	movwf	read_T@MSB,c
   940                           
   941                           ;Temp.c: 104: Temp2=LSB&0x0F;
   942  000CF0  5014               	movf	read_T@LSB,w,c
   943  000CF2  0B0F               	andlw	15
   944  000CF4  6E2B               	movwf	_Temp2,c
   945                           
   946                           ;Temp.c: 106: Temp1=(LSB>>4)|(MSB<<4);
   947  000CF6  C013  F012         	movff	read_T@MSB,??_read_T
   948  000CFA  3A12               	swapf	??_read_T,f,c
   949  000CFC  0EF0               	movlw	240
   950  000CFE  1612               	andwf	??_read_T,f,c
   951  000D00  3814               	swapf	read_T@LSB,w,c
   952  000D02  0B0F               	andlw	15
   953  000D04  1012               	iorwf	??_read_T,w,c
   954  000D06  6E2A               	movwf	_Temp1,c
   955  000D08                     l179:
   956  000D08  0012               	return	
   957  000D0A                     __end_of_read_T:
   958                           	opt stack 0
   959                           tblptru	equ	0xFF8
   960                           tblptrh	equ	0xFF7
   961                           tblptrl	equ	0xFF6
   962                           tablat	equ	0xFF5
   963                           prodh	equ	0xFF4
   964                           prodl	equ	0xFF3
   965                           intcon	equ	0xFF2
   966                           postinc0	equ	0xFEE
   967                           wreg	equ	0xFE8
   968                           status	equ	0xFD8
   969                           
   970 ;; *************** function _Read_bit *****************
   971 ;; Defined at:
   972 ;;		line 53 in file "Temp.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;		None
   975 ;; Auto vars:     Size  Location     Type
   976 ;;  i               2   15[COMRAM] int 
   977 ;;  k               1   14[COMRAM] unsigned char 
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      unsigned char 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   987 ;;      Params:         0       0       0       0       0       0       0
   988 ;;      Locals:         3       0       0       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0       0       0
   990 ;;      Totals:         3       0       0       0       0       0       0
   991 ;;Total ram usage:        3 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    1
   994 ;; This function calls:
   995 ;;		Nothing
   996 ;; This function is called by:
   997 ;;		_read_T
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text4
  1002  000C34                     __ptext4:
  1003                           	opt stack 0
  1004  000C34                     _Read_bit:
  1005                           	opt stack 27
  1006                           
  1007                           ;Temp.c: 55: unsigned char k=0;
  1008                           
  1009                           ;incstack = 0
  1010  000C34  0E00               	movlw	0
  1011  000C36  6E0F               	movwf	Read_bit@k,c
  1012                           
  1013                           ;Temp.c: 56: for(int i=0;i<8;i++)
  1014  000C38  0E00               	movlw	0
  1015  000C3A  6E11               	movwf	Read_bit@i+1,c
  1016  000C3C  0E00               	movlw	0
  1017  000C3E  6E10               	movwf	Read_bit@i,c
  1018  000C40  5011               	movf	Read_bit@i+1,w,c
  1019  000C42  0A80               	xorlw	128
  1020  000C44  0F80               	addlw	-128
  1021  000C46  0E08               	movlw	8
  1022  000C48  B4D8               	btfsc	status,2,c
  1023  000C4A  5C10               	subwf	Read_bit@i,w,c
  1024  000C4C  B0D8               	btfsc	status,0,c
  1025  000C4E  D017               	goto	l891
  1026                           
  1027                           ;Temp.c: 57: {
  1028                           ;Temp.c: 58: k>>=1;
  1029  000C50  90D8               	bcf	status,0,c
  1030  000C52  320F               	rrcf	Read_bit@k,f,c
  1031                           
  1032                           ;Temp.c: 59: TRISA4=0;
  1033  000C54  9892               	bcf	3986,4,c	;volatile
  1034                           
  1035                           ;Temp.c: 60: RA4=0;
  1036  000C56  9880               	bcf	3968,4,c	;volatile
  1037                           
  1038                           ;Temp.c: 62: __nop();
  1039  000C58  F000               	nop	
  1040                           
  1041                           ;Temp.c: 63: __nop();
  1042  000C5A  F000               	nop	
  1043                           
  1044                           ;Temp.c: 64: __nop();
  1045  000C5C  F000               	nop	
  1046                           
  1047                           ;Temp.c: 65: __nop();
  1048  000C5E  F000               	nop	
  1049                           
  1050                           ;Temp.c: 66: __nop();
  1051  000C60  F000               	nop	
  1052                           
  1053                           ;Temp.c: 67: __nop();
  1054  000C62  F000               	nop	
  1055                           
  1056                           ;Temp.c: 68: TRISA4=1;
  1057  000C64  8892               	bsf	3986,4,c	;volatile
  1058                           
  1059                           ;Temp.c: 69: __nop();
  1060  000C66  F000               	nop	
  1061                           
  1062                           ;Temp.c: 70: __nop();
  1063  000C68  F000               	nop	
  1064                           
  1065                           ;Temp.c: 71: __nop();
  1066  000C6A  F000               	nop	
  1067                           
  1068                           ;Temp.c: 72: __nop();
  1069  000C6C  F000               	nop	
  1070                           
  1071                           ;Temp.c: 73: if(RA4==1)
  1072  000C6E  B880               	btfsc	3968,4,c	;volatile
  1073                           
  1074                           ;Temp.c: 74: {
  1075                           ;Temp.c: 75: k|=0x80;
  1076  000C70  8E0F               	bsf	Read_bit@k,7,c
  1077                           
  1078                           ;Temp.c: 77: }
  1079                           ;Temp.c: 78: _delay((unsigned long)((63)*(4000000/4000000.0)));
  1080  000C72  0E15               	movlw	21
  1081  000C74                     u437:
  1082  000C74  2EE8               	decfsz	wreg,f,c
  1083  000C76  D7FE               	goto	u437
  1084  000C78  4A10               	infsnz	Read_bit@i,f,c
  1085  000C7A  2A11               	incf	Read_bit@i+1,f,c
  1086  000C7C  D7E1               	goto	L2
  1087  000C7E                     l891:
  1088                           
  1089                           ;Temp.c: 80: }
  1090                           ;Temp.c: 81: return k;
  1091  000C7E  500F               	movf	Read_bit@k,w,c
  1092  000C80  0012               	return	
  1093  000C82                     __end_of_Read_bit:
  1094                           	opt stack 0
  1095                           tblptru	equ	0xFF8
  1096                           tblptrh	equ	0xFF7
  1097                           tblptrl	equ	0xFF6
  1098                           tablat	equ	0xFF5
  1099                           prodh	equ	0xFF4
  1100                           prodl	equ	0xFF3
  1101                           intcon	equ	0xFF2
  1102                           postinc0	equ	0xFEE
  1103                           wreg	equ	0xFE8
  1104                           status	equ	0xFD8
  1105                           
  1106 ;; *************** function _ConvertT *****************
  1107 ;; Defined at:
  1108 ;;		line 83 in file "Temp.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;		None
  1113 ;; Return value:  Size  Location     Type
  1114 ;;		None               void
  1115 ;; Registers used:
  1116 ;;		wreg, status,2, status,0, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1122 ;;      Params:         0       0       0       0       0       0       0
  1123 ;;      Locals:         0       0       0       0       0       0       0
  1124 ;;      Temps:          1       0       0       0       0       0       0
  1125 ;;      Totals:         1       0       0       0       0       0       0
  1126 ;;Total ram usage:        1 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; Hardware stack levels required when called:    2
  1129 ;; This function calls:
  1130 ;;		_Write_bit
  1131 ;;		_reset
  1132 ;; This function is called by:
  1133 ;;		_Time_display
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text5
  1138  000DAC                     __ptext5:
  1139                           	opt stack 0
  1140  000DAC                     _ConvertT:
  1141                           	opt stack 27
  1142                           
  1143                           ;Temp.c: 85: if(reset()==1)
  1144                           
  1145                           ;incstack = 0
  1146  000DAC  ECA4  F006         	call	_reset	;wreg free
  1147  000DB0  6E12               	movwf	??_ConvertT& (0+255),c
  1148  000DB2  0412               	decf	??_ConvertT,w,c
  1149  000DB4  A4D8               	btfss	status,2,c
  1150  000DB6  D006               	goto	l175
  1151                           
  1152                           ;Temp.c: 86: {
  1153                           ;Temp.c: 87: Write_bit(0xcc);
  1154  000DB8  0ECC               	movlw	204
  1155  000DBA  EC85  F006         	call	_Write_bit
  1156                           
  1157                           ;Temp.c: 88: Write_bit(0x44);
  1158  000DBE  0E44               	movlw	68
  1159  000DC0  EC85  F006         	call	_Write_bit
  1160  000DC4                     l175:
  1161  000DC4  0012               	return	
  1162  000DC6                     __end_of_ConvertT:
  1163                           	opt stack 0
  1164                           tblptru	equ	0xFF8
  1165                           tblptrh	equ	0xFF7
  1166                           tblptrl	equ	0xFF6
  1167                           tablat	equ	0xFF5
  1168                           prodh	equ	0xFF4
  1169                           prodl	equ	0xFF3
  1170                           intcon	equ	0xFF2
  1171                           postinc0	equ	0xFEE
  1172                           wreg	equ	0xFE8
  1173                           status	equ	0xFD8
  1174                           
  1175 ;; *************** function _reset *****************
  1176 ;; Defined at:
  1177 ;;		line 4 in file "Temp.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  out             1   14[COMRAM] unsigned char 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      unsigned char 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1191 ;;      Params:         0       0       0       0       0       0       0
  1192 ;;      Locals:         1       0       0       0       0       0       0
  1193 ;;      Temps:          0       0       0       0       0       0       0
  1194 ;;      Totals:         1       0       0       0       0       0       0
  1195 ;;Total ram usage:        1 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    1
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_ConvertT
  1202 ;;		_read_T
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text6
  1207  000D48                     __ptext6:
  1208                           	opt stack 0
  1209  000D48                     _reset:
  1210                           	opt stack 27
  1211                           
  1212                           ;Temp.c: 8: unsigned char out;
  1213                           ;Temp.c: 9: TRISA4=0;
  1214                           
  1215                           ;incstack = 0
  1216  000D48  9892               	bcf	3986,4,c	;volatile
  1217                           
  1218                           ;Temp.c: 10: RA4=0;
  1219  000D4A  9880               	bcf	3968,4,c	;volatile
  1220                           
  1221                           ;Temp.c: 11: _delay((unsigned long)((503)*(4000000/4000000.0)));
  1222  000D4C  0EA7               	movlw	167
  1223  000D4E                     u447:
  1224  000D4E  2EE8               	decfsz	wreg,f,c
  1225  000D50  D7FE               	goto	u447
  1226  000D52  D000               	nop2		;nop
  1227                           
  1228                           ;Temp.c: 12: TRISA4=1;
  1229  000D54  8892               	bsf	3986,4,c	;volatile
  1230                           
  1231                           ;Temp.c: 13: _delay((unsigned long)((70)*(4000000/4000000.0)));
  1232  000D56  0E17               	movlw	23
  1233  000D58                     u457:
  1234  000D58  2EE8               	decfsz	wreg,f,c
  1235  000D5A  D7FE               	goto	u457
  1236  000D5C  F000               	nop	
  1237                           
  1238                           ;Temp.c: 16: if(RA4==1)
  1239  000D5E  A880               	btfss	3968,4,c	;volatile
  1240  000D60  D002               	goto	l803
  1241                           
  1242                           ;Temp.c: 17: {
  1243                           ;Temp.c: 18: out=0;
  1244  000D62  0E00               	movlw	0
  1245  000D64  D001               	goto	L3
  1246  000D66                     l803:
  1247                           
  1248                           ;Temp.c: 20: else
  1249                           ;Temp.c: 21: {
  1250                           ;Temp.c: 22: out=1;
  1251  000D66  0E01               	movlw	1
  1252  000D68                     L3:
  1253  000D68  6E0F               	movwf	reset@out,c
  1254                           
  1255                           ;Temp.c: 23: }
  1256                           ;Temp.c: 24: _delay((unsigned long)((430)*(4000000/4000000.0)));
  1257  000D6A  0E8F               	movlw	143
  1258  000D6C                     u467:
  1259  000D6C  2EE8               	decfsz	wreg,f,c
  1260  000D6E  D7FE               	goto	u467
  1261  000D70  F000               	nop	
  1262                           
  1263                           ;Temp.c: 25: return out;
  1264  000D72  500F               	movf	reset@out,w,c
  1265  000D74  0012               	return	
  1266  000D76                     __end_of_reset:
  1267                           	opt stack 0
  1268                           tblptru	equ	0xFF8
  1269                           tblptrh	equ	0xFF7
  1270                           tblptrl	equ	0xFF6
  1271                           tablat	equ	0xFF5
  1272                           prodh	equ	0xFF4
  1273                           prodl	equ	0xFF3
  1274                           intcon	equ	0xFF2
  1275                           postinc0	equ	0xFEE
  1276                           wreg	equ	0xFE8
  1277                           status	equ	0xFD8
  1278                           
  1279 ;; *************** function _Write_bit *****************
  1280 ;; Defined at:
  1281 ;;		line 27 in file "Temp.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  data            1    wreg     unsigned char 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  data            1   15[COMRAM] unsigned char 
  1286 ;;  i               1   16[COMRAM] unsigned char 
  1287 ;;  k               1   14[COMRAM] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;		None               void
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1297 ;;      Params:         0       0       0       0       0       0       0
  1298 ;;      Locals:         3       0       0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0       0       0
  1300 ;;      Totals:         3       0       0       0       0       0       0
  1301 ;;Total ram usage:        3 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; Hardware stack levels required when called:    1
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_ConvertT
  1308 ;;		_read_T
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text7
  1313  000D0A                     __ptext7:
  1314                           	opt stack 0
  1315  000D0A                     _Write_bit:
  1316                           	opt stack 27
  1317                           
  1318                           ;incstack = 0
  1319                           ;Write_bit@data stored from wreg
  1320  000D0A  6E10               	movwf	Write_bit@data,c
  1321                           
  1322                           ;Temp.c: 29: unsigned char k;
  1323                           ;Temp.c: 30: unsigned char i;
  1324                           ;Temp.c: 31: for(i=0;i<8;i++)
  1325  000D0C  0E00               	movlw	0
  1326  000D0E  6E11               	movwf	Write_bit@i,c
  1327  000D10  D017               	goto	L4
  1328  000D12                     l817:
  1329                           
  1330                           ;Temp.c: 32: {
  1331                           ;Temp.c: 33: k=data&0x01;
  1332  000D12  5010               	movf	Write_bit@data,w,c
  1333  000D14  0B01               	andlw	1
  1334  000D16  6E0F               	movwf	Write_bit@k,c
  1335                           
  1336                           ;Temp.c: 34: TRISA4=0;
  1337  000D18  9892               	bcf	3986,4,c	;volatile
  1338                           
  1339                           ;Temp.c: 35: RA4=0;
  1340  000D1A  9880               	bcf	3968,4,c	;volatile
  1341                           
  1342                           ;Temp.c: 36: __nop();
  1343  000D1C  F000               	nop	
  1344                           
  1345                           ;Temp.c: 37: __nop();
  1346  000D1E  F000               	nop	
  1347                           
  1348                           ;Temp.c: 38: __nop();
  1349  000D20  F000               	nop	
  1350                           
  1351                           ;Temp.c: 39: __nop();
  1352  000D22  F000               	nop	
  1353                           
  1354                           ;Temp.c: 40: __nop();
  1355  000D24  F000               	nop	
  1356                           
  1357                           ;Temp.c: 41: if(k==1)
  1358  000D26  040F               	decf	Write_bit@k,w,c
  1359  000D28  B4D8               	btfsc	status,2,c
  1360                           
  1361                           ;Temp.c: 42: {
  1362                           ;Temp.c: 43: TRISA4=1;
  1363  000D2A  8892               	bsf	3986,4,c	;volatile
  1364                           
  1365                           ;Temp.c: 44: }
  1366                           ;Temp.c: 46: _delay((unsigned long)((63)*(4000000/4000000.0)));
  1367  000D2C  0E15               	movlw	21
  1368  000D2E                     u477:
  1369  000D2E  2EE8               	decfsz	wreg,f,c
  1370  000D30  D7FE               	goto	u477
  1371                           
  1372                           ;Temp.c: 47: TRISA4=1;
  1373  000D32  8892               	bsf	3986,4,c	;volatile
  1374                           
  1375                           ;Temp.c: 48: __nop();
  1376  000D34  F000               	nop	
  1377                           
  1378                           ;Temp.c: 49: __nop();
  1379  000D36  F000               	nop	
  1380                           
  1381                           ;Temp.c: 50: data = data>>1;
  1382  000D38  90D8               	bcf	status,0,c
  1383  000D3A  3010               	rrcf	Write_bit@data,w,c
  1384  000D3C  6E10               	movwf	Write_bit@data,c
  1385  000D3E  2A11               	incf	Write_bit@i,f,c
  1386  000D40                     L4:
  1387  000D40  0E07               	movlw	7
  1388  000D42  6411               	cpfsgt	Write_bit@i,c
  1389  000D44  D7E6               	goto	l817
  1390  000D46  0012               	return	
  1391  000D48                     __end_of_Write_bit:
  1392                           	opt stack 0
  1393                           tblptru	equ	0xFF8
  1394                           tblptrh	equ	0xFF7
  1395                           tblptrl	equ	0xFF6
  1396                           tablat	equ	0xFF5
  1397                           prodh	equ	0xFF4
  1398                           prodl	equ	0xFF3
  1399                           intcon	equ	0xFF2
  1400                           postinc0	equ	0xFEE
  1401                           wreg	equ	0xFE8
  1402                           status	equ	0xFD8
  1403                           
  1404 ;; *************** function _LCD_init *****************
  1405 ;; Defined at:
  1406 ;;		line 2 in file "1602.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;		None
  1411 ;; Return value:  Size  Location     Type
  1412 ;;		None               void
  1413 ;; Registers used:
  1414 ;;		wreg, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1420 ;;      Params:         0       0       0       0       0       0       0
  1421 ;;      Locals:         0       0       0       0       0       0       0
  1422 ;;      Temps:          1       0       0       0       0       0       0
  1423 ;;      Totals:         1       0       0       0       0       0       0
  1424 ;;Total ram usage:        1 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    2
  1427 ;; This function calls:
  1428 ;;		_busy_bus
  1429 ;;		_write_com
  1430 ;; This function is called by:
  1431 ;;		_main
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text8
  1436  000B54                     __ptext8:
  1437                           	opt stack 0
  1438  000B54                     _LCD_init:
  1439                           	opt stack 28
  1440                           
  1441                           ;1602.c: 4: _delay((unsigned long)((150)*(4000000/4000.0)));
  1442                           
  1443                           ;incstack = 0
  1444  000B54  0EC3               	movlw	195
  1445  000B56  6E10               	movwf	??_LCD_init& (0+255),c
  1446  000B58  0ECD               	movlw	205
  1447  000B5A                     u487:
  1448  000B5A  2EE8               	decfsz	wreg,f,c
  1449  000B5C  D7FE               	goto	u487
  1450  000B5E  2E10               	decfsz	??_LCD_init& (0+255),f,c
  1451  000B60  D7FC               	goto	u487
  1452  000B62  F000               	nop	
  1453                           
  1454                           ;1602.c: 5: write_com(0x38);
  1455  000B64  0E38               	movlw	56
  1456  000B66  ECEE  F006         	call	_write_com
  1457                           
  1458                           ;1602.c: 6: _delay((unsigned long)((50)*(4000000/4000.0)));
  1459  000B6A  0E41               	movlw	65
  1460  000B6C  6E10               	movwf	??_LCD_init& (0+255),c
  1461  000B6E  0EEE               	movlw	238
  1462  000B70                     u497:
  1463  000B70  2EE8               	decfsz	wreg,f,c
  1464  000B72  D7FE               	goto	u497
  1465  000B74  2E10               	decfsz	??_LCD_init& (0+255),f,c
  1466  000B76  D7FC               	goto	u497
  1467  000B78  D000               	nop2	
  1468                           
  1469                           ;1602.c: 7: write_com(0x38);
  1470  000B7A  0E38               	movlw	56
  1471  000B7C  ECEE  F006         	call	_write_com
  1472                           
  1473                           ;1602.c: 8: _delay((unsigned long)((50)*(4000000/4000.0)));
  1474  000B80  0E41               	movlw	65
  1475  000B82  6E10               	movwf	??_LCD_init& (0+255),c
  1476  000B84  0EEE               	movlw	238
  1477  000B86                     u507:
  1478  000B86  2EE8               	decfsz	wreg,f,c
  1479  000B88  D7FE               	goto	u507
  1480  000B8A  2E10               	decfsz	??_LCD_init& (0+255),f,c
  1481  000B8C  D7FC               	goto	u507
  1482  000B8E  D000               	nop2	
  1483                           
  1484                           ;1602.c: 9: write_com(0x38);
  1485  000B90  0E38               	movlw	56
  1486  000B92  ECEE  F006         	call	_write_com
  1487                           
  1488                           ;1602.c: 10: busy_bus();
  1489  000B96  ECF7  F006         	call	_busy_bus	;wreg free
  1490                           
  1491                           ;1602.c: 11: write_com(0x38);
  1492  000B9A  0E38               	movlw	56
  1493  000B9C  ECEE  F006         	call	_write_com
  1494                           
  1495                           ;1602.c: 12: busy_bus();
  1496  000BA0  ECF7  F006         	call	_busy_bus	;wreg free
  1497                           
  1498                           ;1602.c: 13: write_com(0x08);
  1499  000BA4  0E08               	movlw	8
  1500  000BA6  ECEE  F006         	call	_write_com
  1501                           
  1502                           ;1602.c: 14: busy_bus();
  1503  000BAA  ECF7  F006         	call	_busy_bus	;wreg free
  1504                           
  1505                           ;1602.c: 15: write_com(0x01);
  1506  000BAE  0E01               	movlw	1
  1507  000BB0  ECEE  F006         	call	_write_com
  1508                           
  1509                           ;1602.c: 16: busy_bus();
  1510  000BB4  ECF7  F006         	call	_busy_bus	;wreg free
  1511                           
  1512                           ;1602.c: 17: write_com(0x06);
  1513  000BB8  0E06               	movlw	6
  1514  000BBA  ECEE  F006         	call	_write_com
  1515                           
  1516                           ;1602.c: 18: busy_bus();
  1517  000BBE  ECF7  F006         	call	_busy_bus	;wreg free
  1518                           
  1519                           ;1602.c: 19: write_com(0x0C);
  1520  000BC2  0E0C               	movlw	12
  1521  000BC4  ECEE  F006         	call	_write_com
  1522  000BC8  0012               	return	
  1523  000BCA                     __end_of_LCD_init:
  1524                           	opt stack 0
  1525                           tblptru	equ	0xFF8
  1526                           tblptrh	equ	0xFF7
  1527                           tblptrl	equ	0xFF6
  1528                           tablat	equ	0xFF5
  1529                           prodh	equ	0xFF4
  1530                           prodl	equ	0xFF3
  1531                           intcon	equ	0xFF2
  1532                           postinc0	equ	0xFEE
  1533                           wreg	equ	0xFE8
  1534                           status	equ	0xFD8
  1535                           
  1536 ;; *************** function _Clock_display *****************
  1537 ;; Defined at:
  1538 ;;		line 111 in file "main.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;		None               void
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1552 ;;      Params:         0       0       0       0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0
  1555 ;;      Totals:         0       0       0       0       0       0       0
  1556 ;;Total ram usage:        0 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    5
  1559 ;; This function calls:
  1560 ;;		___awdiv
  1561 ;;		___awmod
  1562 ;;		_dispalay
  1563 ;;		_dispalay_string
  1564 ;; This function is called by:
  1565 ;;		_main
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text9
  1570  0007D6                     __ptext9:
  1571                           	opt stack 0
  1572  0007D6                     _Clock_display:
  1573                           	opt stack 25
  1574                           
  1575                           ;main.c: 114: dispalay_string("Now Time:",0x80);
  1576                           
  1577                           ;incstack = 0
  1578  0007D6  0E06               	movlw	high STR_2
  1579  0007D8  6E1A               	movwf	dispalay_string@sp+1,c
  1580  0007DA  0E11               	movlw	low STR_2
  1581  0007DC  6E19               	movwf	dispalay_string@sp,c
  1582  0007DE  0E80               	movlw	128
  1583  0007E0  6E1B               	movwf	dispalay_string@start_addr,c
  1584  0007E2  ECE5  F005         	call	_dispalay_string	;wreg free
  1585                           
  1586                           ;main.c: 116: if(min>=60)
  1587  0007E6  5027               	movf	_min+1,w,c
  1588  0007E8  0A80               	xorlw	128
  1589  0007EA  0F80               	addlw	-128
  1590  0007EC  0E3C               	movlw	60
  1591  0007EE  B4D8               	btfsc	status,2,c
  1592  0007F0  5C26               	subwf	_min,w,c
  1593  0007F2  A0D8               	btfss	status,0,c
  1594  0007F4  D006               	goto	l1031
  1595                           
  1596                           ;main.c: 117: {
  1597                           ;main.c: 118: hour++;
  1598  0007F6  4A24               	infsnz	_hour,f,c
  1599  0007F8  2A25               	incf	_hour+1,f,c
  1600                           
  1601                           ;main.c: 119: min=0;
  1602  0007FA  0E00               	movlw	0
  1603  0007FC  6E27               	movwf	_min+1,c
  1604  0007FE  0E00               	movlw	0
  1605  000800  6E26               	movwf	_min,c
  1606  000802                     l1031:
  1607                           
  1608                           ;main.c: 120: }
  1609                           ;main.c: 121: if(sec>=60)
  1610  000802  5029               	movf	_sec+1,w,c
  1611  000804  0A80               	xorlw	128
  1612  000806  0F80               	addlw	-128
  1613  000808  0E3C               	movlw	60
  1614  00080A  B4D8               	btfsc	status,2,c
  1615  00080C  5C28               	subwf	_sec,w,c
  1616  00080E  A0D8               	btfss	status,0,c
  1617  000810  D006               	goto	l1037
  1618                           
  1619                           ;main.c: 122: {
  1620                           ;main.c: 123: min++;
  1621  000812  4A26               	infsnz	_min,f,c
  1622  000814  2A27               	incf	_min+1,f,c
  1623                           
  1624                           ;main.c: 124: sec=0;
  1625  000816  0E00               	movlw	0
  1626  000818  6E29               	movwf	_sec+1,c
  1627  00081A  0E00               	movlw	0
  1628  00081C  6E28               	movwf	_sec,c
  1629  00081E                     l1037:
  1630                           
  1631                           ;main.c: 125: }
  1632                           ;main.c: 127: dispalay(0xC0,hour/10+0x30);
  1633  00081E  C024  F00F         	movff	_hour,___awdiv@dividend
  1634  000822  C025  F010         	movff	_hour+1,___awdiv@dividend+1
  1635  000826  0E00               	movlw	0
  1636  000828  6E12               	movwf	___awdiv@divisor+1,c
  1637  00082A  0E0A               	movlw	10
  1638  00082C  6E11               	movwf	___awdiv@divisor,c
  1639  00082E  EC7A  F004         	call	___awdiv	;wreg free
  1640  000832  500F               	movf	?___awdiv,w,c
  1641  000834  0F30               	addlw	48
  1642  000836  6E17               	movwf	dispalay@data,c
  1643  000838  0EC0               	movlw	192
  1644  00083A  ECBB  F006         	call	_dispalay
  1645                           
  1646                           ;main.c: 128: dispalay(0xC1,hour%10+0x30);
  1647  00083E  C024  F00F         	movff	_hour,___awmod@dividend
  1648  000842  C025  F010         	movff	_hour+1,___awmod@dividend+1
  1649  000846  0E00               	movlw	0
  1650  000848  6E12               	movwf	___awmod@divisor+1,c
  1651  00084A  0E0A               	movlw	10
  1652  00084C  6E11               	movwf	___awmod@divisor,c
  1653  00084E  EC1B  F005         	call	___awmod	;wreg free
  1654  000852  500F               	movf	?___awmod,w,c
  1655  000854  0F30               	addlw	48
  1656  000856  6E17               	movwf	dispalay@data,c
  1657  000858  0EC1               	movlw	193
  1658  00085A  ECBB  F006         	call	_dispalay
  1659                           
  1660                           ;main.c: 129: dispalay(0xC2,':');
  1661  00085E  0E3A               	movlw	58
  1662  000860  6E17               	movwf	dispalay@data,c
  1663  000862  0EC2               	movlw	194
  1664  000864  ECBB  F006         	call	_dispalay
  1665                           
  1666                           ;main.c: 131: dispalay(0xC3,min/10+0x30);
  1667  000868  C026  F00F         	movff	_min,___awdiv@dividend
  1668  00086C  C027  F010         	movff	_min+1,___awdiv@dividend+1
  1669  000870  0E00               	movlw	0
  1670  000872  6E12               	movwf	___awdiv@divisor+1,c
  1671  000874  0E0A               	movlw	10
  1672  000876  6E11               	movwf	___awdiv@divisor,c
  1673  000878  EC7A  F004         	call	___awdiv	;wreg free
  1674  00087C  500F               	movf	?___awdiv,w,c
  1675  00087E  0F30               	addlw	48
  1676  000880  6E17               	movwf	dispalay@data,c
  1677  000882  0EC3               	movlw	195
  1678  000884  ECBB  F006         	call	_dispalay
  1679                           
  1680                           ;main.c: 132: dispalay(0xC4,min%10+0x30);
  1681  000888  C026  F00F         	movff	_min,___awmod@dividend
  1682  00088C  C027  F010         	movff	_min+1,___awmod@dividend+1
  1683  000890  0E00               	movlw	0
  1684  000892  6E12               	movwf	___awmod@divisor+1,c
  1685  000894  0E0A               	movlw	10
  1686  000896  6E11               	movwf	___awmod@divisor,c
  1687  000898  EC1B  F005         	call	___awmod	;wreg free
  1688  00089C  500F               	movf	?___awmod,w,c
  1689  00089E  0F30               	addlw	48
  1690  0008A0  6E17               	movwf	dispalay@data,c
  1691  0008A2  0EC4               	movlw	196
  1692  0008A4  ECBB  F006         	call	_dispalay
  1693                           
  1694                           ;main.c: 133: dispalay(0xC5,':');
  1695  0008A8  0E3A               	movlw	58
  1696  0008AA  6E17               	movwf	dispalay@data,c
  1697  0008AC  0EC5               	movlw	197
  1698  0008AE  ECBB  F006         	call	_dispalay
  1699                           
  1700                           ;main.c: 135: dispalay(0xC6,sec/10+0x30);
  1701  0008B2  C028  F00F         	movff	_sec,___awdiv@dividend
  1702  0008B6  C029  F010         	movff	_sec+1,___awdiv@dividend+1
  1703  0008BA  0E00               	movlw	0
  1704  0008BC  6E12               	movwf	___awdiv@divisor+1,c
  1705  0008BE  0E0A               	movlw	10
  1706  0008C0  6E11               	movwf	___awdiv@divisor,c
  1707  0008C2  EC7A  F004         	call	___awdiv	;wreg free
  1708  0008C6  500F               	movf	?___awdiv,w,c
  1709  0008C8  0F30               	addlw	48
  1710  0008CA  6E17               	movwf	dispalay@data,c
  1711  0008CC  0EC6               	movlw	198
  1712  0008CE  ECBB  F006         	call	_dispalay
  1713                           
  1714                           ;main.c: 136: dispalay(0xC7,sec%10+0x30);
  1715  0008D2  C028  F00F         	movff	_sec,___awmod@dividend
  1716  0008D6  C029  F010         	movff	_sec+1,___awmod@dividend+1
  1717  0008DA  0E00               	movlw	0
  1718  0008DC  6E12               	movwf	___awmod@divisor+1,c
  1719  0008DE  0E0A               	movlw	10
  1720  0008E0  6E11               	movwf	___awmod@divisor,c
  1721  0008E2  EC1B  F005         	call	___awmod	;wreg free
  1722  0008E6  500F               	movf	?___awmod,w,c
  1723  0008E8  0F30               	addlw	48
  1724  0008EA  6E17               	movwf	dispalay@data,c
  1725  0008EC  0EC7               	movlw	199
  1726  0008EE  ECBB  F006         	call	_dispalay
  1727  0008F2  0012               	return	
  1728  0008F4                     __end_of_Clock_display:
  1729                           	opt stack 0
  1730                           tblptru	equ	0xFF8
  1731                           tblptrh	equ	0xFF7
  1732                           tblptrl	equ	0xFF6
  1733                           tablat	equ	0xFF5
  1734                           prodh	equ	0xFF4
  1735                           prodl	equ	0xFF3
  1736                           intcon	equ	0xFF2
  1737                           postinc0	equ	0xFEE
  1738                           wreg	equ	0xFE8
  1739                           status	equ	0xFD8
  1740                           
  1741 ;; *************** function _dispalay_string *****************
  1742 ;; Defined at:
  1743 ;;		line 61 in file "1602.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  sp              2   24[COMRAM] PTR unsigned char 
  1746 ;;		 -> STR_6(5), STR_5(4), STR_4(5), STR_3(10), 
  1747 ;;		 -> STR_2(10), STR_1(7), 
  1748 ;;  start_addr      1   26[COMRAM] unsigned char 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  str_length      2   29[COMRAM] int 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;		None               void
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1760 ;;      Params:         3       0       0       0       0       0       0
  1761 ;;      Locals:         2       0       0       0       0       0       0
  1762 ;;      Temps:          2       0       0       0       0       0       0
  1763 ;;      Totals:         7       0       0       0       0       0       0
  1764 ;;Total ram usage:        7 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    4
  1767 ;; This function calls:
  1768 ;;		_busy_bus
  1769 ;;		_dispalay
  1770 ;;		_write_data
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;;		_Clock_display
  1774 ;;		_Time_display
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           	psect	text10
  1779  000BCA                     __ptext10:
  1780                           	opt stack 0
  1781  000BCA                     _dispalay_string:
  1782                           	opt stack 26
  1783                           
  1784                           ;1602.c: 64: dispalay(start_addr,*sp);
  1785                           
  1786                           ;incstack = 0
  1787  000BCA  C019  FFF6         	movff	dispalay_string@sp,tblptrl
  1788  000BCE  C01A  FFF7         	movff	dispalay_string@sp+1,tblptrh
  1789  000BD2                     	if	0	;tblptru may be non-zero
  1790  000BD2                     	endif
  1791  000BD2                     	if	0	;tblptru may be non-zero
  1792  000BD2                     	endif
  1793  000BD2  0008               	tblrd		*
  1794  000BD4  CFF5 F017          	movff	tablat,dispalay@data
  1795  000BD8  501B               	movf	dispalay_string@start_addr,w,c
  1796  000BDA  ECBB  F006         	call	_dispalay
  1797                           
  1798                           ;1602.c: 65: int str_length=1;
  1799  000BDE  0E00               	movlw	0
  1800  000BE0  6E1F               	movwf	dispalay_string@str_length+1,c
  1801  000BE2  0E01               	movlw	1
  1802  000BE4  6E1E               	movwf	dispalay_string@str_length,c
  1803                           
  1804                           ;1602.c: 68: while(*(sp+str_length)!='\0')
  1805  000BE6  D014               	goto	l905
  1806  000BE8                     l899:
  1807                           
  1808                           ;1602.c: 69: {
  1809                           ;1602.c: 70: busy_bus();
  1810  000BE8  ECF7  F006         	call	_busy_bus	;wreg free
  1811                           
  1812                           ;1602.c: 71: write_data(*(sp+str_length));
  1813  000BEC  C019  F01C         	movff	dispalay_string@sp,??_dispalay_string
  1814  000BF0  C01A  F01D         	movff	dispalay_string@sp+1,??_dispalay_string+1
  1815  000BF4  501E               	movf	dispalay_string@str_length,w,c
  1816  000BF6  261C               	addwf	??_dispalay_string,f,c
  1817  000BF8  501F               	movf	dispalay_string@str_length+1,w,c
  1818  000BFA  221D               	addwfc	??_dispalay_string+1,f,c
  1819  000BFC  C01C  FFF6         	movff	??_dispalay_string,tblptrl
  1820  000C00  C01D  FFF7         	movff	??_dispalay_string+1,tblptrh
  1821  000C04                     	if	0	;tblptru may be non-zero
  1822  000C04                     	endif
  1823  000C04                     	if	0	;tblptru may be non-zero
  1824  000C04                     	endif
  1825  000C04  0008               	tblrd		*
  1826  000C06  50F5               	movf	tablat,w,c
  1827  000C08  ECE3  F006         	call	_write_data
  1828                           
  1829                           ;1602.c: 72: str_length++;
  1830  000C0C  4A1E               	infsnz	dispalay_string@str_length,f,c
  1831  000C0E  2A1F               	incf	dispalay_string@str_length+1,f,c
  1832  000C10                     l905:
  1833  000C10  C019  F01C         	movff	dispalay_string@sp,??_dispalay_string
  1834  000C14  C01A  F01D         	movff	dispalay_string@sp+1,??_dispalay_string+1
  1835  000C18  501E               	movf	dispalay_string@str_length,w,c
  1836  000C1A  261C               	addwf	??_dispalay_string,f,c
  1837  000C1C  501F               	movf	dispalay_string@str_length+1,w,c
  1838  000C1E  221D               	addwfc	??_dispalay_string+1,f,c
  1839  000C20  C01C  FFF6         	movff	??_dispalay_string,tblptrl
  1840  000C24  C01D  FFF7         	movff	??_dispalay_string+1,tblptrh
  1841  000C28                     	if	0	;tblptru may be non-zero
  1842  000C28                     	endif
  1843  000C28                     	if	0	;tblptru may be non-zero
  1844  000C28                     	endif
  1845  000C28  0008               	tblrd		*
  1846  000C2A  50F5               	movf	tablat,w,c
  1847  000C2C  0900               	iorlw	0
  1848  000C2E  B4D8               	btfsc	status,2,c
  1849  000C30  0012               	return	
  1850  000C32  D7DA               	goto	l899
  1851  000C34                     __end_of_dispalay_string:
  1852                           	opt stack 0
  1853                           tblptru	equ	0xFF8
  1854                           tblptrh	equ	0xFF7
  1855                           tblptrl	equ	0xFF6
  1856                           tablat	equ	0xFF5
  1857                           prodh	equ	0xFF4
  1858                           prodl	equ	0xFF3
  1859                           intcon	equ	0xFF2
  1860                           postinc0	equ	0xFEE
  1861                           wreg	equ	0xFE8
  1862                           status	equ	0xFD8
  1863                           
  1864 ;; *************** function _dispalay *****************
  1865 ;; Defined at:
  1866 ;;		line 51 in file "1602.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  x               1    wreg     unsigned char 
  1869 ;;  data            1   22[COMRAM] unsigned char 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  x               1   23[COMRAM] unsigned char 
  1872 ;; Return value:  Size  Location     Type
  1873 ;;		None               void
  1874 ;; Registers used:
  1875 ;;		wreg, status,2, cstack
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1881 ;;      Params:         1       0       0       0       0       0       0
  1882 ;;      Locals:         1       0       0       0       0       0       0
  1883 ;;      Temps:          0       0       0       0       0       0       0
  1884 ;;      Totals:         2       0       0       0       0       0       0
  1885 ;;Total ram usage:        2 bytes
  1886 ;; Hardware stack levels used:    1
  1887 ;; Hardware stack levels required when called:    3
  1888 ;; This function calls:
  1889 ;;		_busy_bus
  1890 ;;		_write_com
  1891 ;;		_write_data
  1892 ;; This function is called by:
  1893 ;;		_Clock_display
  1894 ;;		_Time_display
  1895 ;;		_dispalay_string
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text11
  1900  000D76                     __ptext11:
  1901                           	opt stack 0
  1902  000D76                     _dispalay:
  1903                           	opt stack 26
  1904                           
  1905                           ;incstack = 0
  1906                           ;dispalay@x stored from wreg
  1907  000D76  6E18               	movwf	dispalay@x,c
  1908                           
  1909                           ;1602.c: 54: busy_bus();
  1910  000D78  ECF7  F006         	call	_busy_bus	;wreg free
  1911                           
  1912                           ;1602.c: 55: write_com(x);
  1913  000D7C  5018               	movf	dispalay@x,w,c
  1914  000D7E  ECEE  F006         	call	_write_com
  1915                           
  1916                           ;1602.c: 56: busy_bus();
  1917  000D82  ECF7  F006         	call	_busy_bus	;wreg free
  1918                           
  1919                           ;1602.c: 57: write_data(data);
  1920  000D86  5017               	movf	dispalay@data,w,c
  1921  000D88  ECE3  F006         	call	_write_data
  1922                           
  1923                           ;1602.c: 58: busy_bus();
  1924  000D8C  ECF7  F006         	call	_busy_bus	;wreg free
  1925  000D90  0012               	return	
  1926  000D92                     __end_of_dispalay:
  1927                           	opt stack 0
  1928                           tblptru	equ	0xFF8
  1929                           tblptrh	equ	0xFF7
  1930                           tblptrl	equ	0xFF6
  1931                           tablat	equ	0xFF5
  1932                           prodh	equ	0xFF4
  1933                           prodl	equ	0xFF3
  1934                           intcon	equ	0xFF2
  1935                           postinc0	equ	0xFEE
  1936                           wreg	equ	0xFE8
  1937                           status	equ	0xFD8
  1938                           
  1939 ;; *************** function _write_data *****************
  1940 ;; Defined at:
  1941 ;;		line 41 in file "1602.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  data            1    wreg     unsigned char 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  data            1   14[COMRAM] unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;		None               void
  1948 ;; Registers used:
  1949 ;;		wreg, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1955 ;;      Params:         0       0       0       0       0       0       0
  1956 ;;      Locals:         1       0       0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0
  1958 ;;      Totals:         1       0       0       0       0       0       0
  1959 ;;Total ram usage:        1 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    2
  1962 ;; This function calls:
  1963 ;;		_busy_bus
  1964 ;; This function is called by:
  1965 ;;		_dispalay
  1966 ;;		_dispalay_string
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text12
  1971  000DC6                     __ptext12:
  1972                           	opt stack 0
  1973  000DC6                     _write_data:
  1974                           	opt stack 27
  1975                           
  1976                           ;incstack = 0
  1977                           ;write_data@data stored from wreg
  1978  000DC6  6E0F               	movwf	write_data@data,c
  1979                           
  1980                           ;1602.c: 43: busy_bus();
  1981  000DC8  ECF7  F006         	call	_busy_bus	;wreg free
  1982                           
  1983                           ;1602.c: 44: RB5=1;
  1984  000DCC  8A81               	bsf	3969,5,c	;volatile
  1985                           
  1986                           ;1602.c: 45: RB4=0;
  1987  000DCE  9881               	bcf	3969,4,c	;volatile
  1988                           
  1989                           ;1602.c: 46: PORTD=data;
  1990  000DD0  C00F  FF83         	movff	write_data@data,3971	;volatile
  1991                           
  1992                           ;1602.c: 47: RB3=1;
  1993  000DD4  8681               	bsf	3969,3,c	;volatile
  1994  000DD6  F000               	nop		;# 
  1995                           
  1996                           ;1602.c: 49: RB3=0;
  1997  000DD8  9681               	bcf	3969,3,c	;volatile
  1998  000DDA  0012               	return	
  1999  000DDC                     __end_of_write_data:
  2000                           	opt stack 0
  2001                           tblptru	equ	0xFF8
  2002                           tblptrh	equ	0xFF7
  2003                           tblptrl	equ	0xFF6
  2004                           tablat	equ	0xFF5
  2005                           prodh	equ	0xFF4
  2006                           prodl	equ	0xFF3
  2007                           intcon	equ	0xFF2
  2008                           postinc0	equ	0xFEE
  2009                           wreg	equ	0xFE8
  2010                           status	equ	0xFD8
  2011                           
  2012 ;; *************** function ___awmod *****************
  2013 ;; Defined at:
  2014 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  dividend        2   14[COMRAM] int 
  2017 ;;  divisor         2   16[COMRAM] int 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  sign            1   19[COMRAM] unsigned char 
  2020 ;;  counter         1   18[COMRAM] unsigned char 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  2   14[COMRAM] int 
  2023 ;; Registers used:
  2024 ;;		wreg, status,2, status,0, prodl
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2030 ;;      Params:         4       0       0       0       0       0       0
  2031 ;;      Locals:         2       0       0       0       0       0       0
  2032 ;;      Temps:          0       0       0       0       0       0       0
  2033 ;;      Totals:         6       0       0       0       0       0       0
  2034 ;;Total ram usage:        6 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    1
  2037 ;; This function calls:
  2038 ;;		Nothing
  2039 ;; This function is called by:
  2040 ;;		_main
  2041 ;;		_Clock_display
  2042 ;;		_Time_display
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text13
  2047  000A36                     __ptext13:
  2048                           	opt stack 0
  2049  000A36                     ___awmod:
  2050                           	opt stack 29
  2051                           
  2052                           ;incstack = 0
  2053  000A36  0E00               	movlw	0
  2054  000A38  6E14               	movwf	___awmod@sign,c
  2055  000A3A  5010               	movf	___awmod@dividend+1,w,c
  2056  000A3C  0A80               	xorlw	128
  2057  000A3E  6EF3               	movwf	prodl,c
  2058  000A40  0E80               	movlw	128
  2059  000A42  5CF3               	subwf	prodl,w,c
  2060  000A44  0E00               	movlw	0
  2061  000A46  B4D8               	btfsc	status,2,c
  2062  000A48  5C0F               	subwf	___awmod@dividend,w,c
  2063  000A4A  B0D8               	btfsc	status,0,c
  2064  000A4C  D006               	goto	l971
  2065  000A4E  6C0F               	negf	___awmod@dividend,c
  2066  000A50  1E10               	comf	___awmod@dividend+1,f,c
  2067  000A52  B0D8               	btfsc	status,0,c
  2068  000A54  2A10               	incf	___awmod@dividend+1,f,c
  2069  000A56  0E01               	movlw	1
  2070  000A58  6E14               	movwf	___awmod@sign,c
  2071  000A5A                     l971:
  2072  000A5A  5012               	movf	___awmod@divisor+1,w,c
  2073  000A5C  0A80               	xorlw	128
  2074  000A5E  6EF3               	movwf	prodl,c
  2075  000A60  0E80               	movlw	128
  2076  000A62  5CF3               	subwf	prodl,w,c
  2077  000A64  0E00               	movlw	0
  2078  000A66  B4D8               	btfsc	status,2,c
  2079  000A68  5C11               	subwf	___awmod@divisor,w,c
  2080  000A6A  B0D8               	btfsc	status,0,c
  2081  000A6C  D004               	goto	l975
  2082  000A6E  6C11               	negf	___awmod@divisor,c
  2083  000A70  1E12               	comf	___awmod@divisor+1,f,c
  2084  000A72  B0D8               	btfsc	status,0,c
  2085  000A74  2A12               	incf	___awmod@divisor+1,f,c
  2086  000A76                     l975:
  2087  000A76  5012               	movf	___awmod@divisor+1,w,c
  2088  000A78  1011               	iorwf	___awmod@divisor,w,c
  2089  000A7A  B4D8               	btfsc	status,2,c
  2090  000A7C  D018               	goto	l991
  2091  000A7E  0E01               	movlw	1
  2092  000A80  6E13               	movwf	___awmod@counter,c
  2093  000A82  D004               	goto	l981
  2094  000A84                     l979:
  2095  000A84  90D8               	bcf	status,0,c
  2096  000A86  3611               	rlcf	___awmod@divisor,f,c
  2097  000A88  3612               	rlcf	___awmod@divisor+1,f,c
  2098  000A8A  2A13               	incf	___awmod@counter,f,c
  2099  000A8C                     l981:
  2100  000A8C  AE12               	btfss	___awmod@divisor+1,7,c
  2101  000A8E  D7FA               	goto	l979
  2102  000A90                     l983:
  2103  000A90  5011               	movf	___awmod@divisor,w,c
  2104  000A92  5C0F               	subwf	___awmod@dividend,w,c
  2105  000A94  5012               	movf	___awmod@divisor+1,w,c
  2106  000A96  5810               	subwfb	___awmod@dividend+1,w,c
  2107  000A98  A0D8               	btfss	status,0,c
  2108  000A9A  D004               	goto	l987
  2109  000A9C  5011               	movf	___awmod@divisor,w,c
  2110  000A9E  5E0F               	subwf	___awmod@dividend,f,c
  2111  000AA0  5012               	movf	___awmod@divisor+1,w,c
  2112  000AA2  5A10               	subwfb	___awmod@dividend+1,f,c
  2113  000AA4                     l987:
  2114  000AA4  90D8               	bcf	status,0,c
  2115  000AA6  3212               	rrcf	___awmod@divisor+1,f,c
  2116  000AA8  3211               	rrcf	___awmod@divisor,f,c
  2117  000AAA  2E13               	decfsz	___awmod@counter,f,c
  2118  000AAC  D7F1               	goto	l983
  2119  000AAE                     l991:
  2120  000AAE  5014               	movf	___awmod@sign,w,c
  2121  000AB0  B4D8               	btfsc	status,2,c
  2122  000AB2  D004               	goto	l995
  2123  000AB4  6C0F               	negf	___awmod@dividend,c
  2124  000AB6  1E10               	comf	___awmod@dividend+1,f,c
  2125  000AB8  B0D8               	btfsc	status,0,c
  2126  000ABA  2A10               	incf	___awmod@dividend+1,f,c
  2127  000ABC                     l995:
  2128  000ABC  C00F  F00F         	movff	___awmod@dividend,?___awmod
  2129  000AC0  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  2130  000AC4  0012               	return	
  2131  000AC6                     __end_of___awmod:
  2132                           	opt stack 0
  2133                           tblptru	equ	0xFF8
  2134                           tblptrh	equ	0xFF7
  2135                           tblptrl	equ	0xFF6
  2136                           tablat	equ	0xFF5
  2137                           prodh	equ	0xFF4
  2138                           prodl	equ	0xFF3
  2139                           intcon	equ	0xFF2
  2140                           postinc0	equ	0xFEE
  2141                           wreg	equ	0xFE8
  2142                           status	equ	0xFD8
  2143                           
  2144 ;; *************** function ___awdiv *****************
  2145 ;; Defined at:
  2146 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  dividend        2   14[COMRAM] int 
  2149 ;;  divisor         2   16[COMRAM] int 
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  quotient        2   20[COMRAM] int 
  2152 ;;  sign            1   19[COMRAM] unsigned char 
  2153 ;;  counter         1   18[COMRAM] unsigned char 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  2   14[COMRAM] int 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0, prodl
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2163 ;;      Params:         4       0       0       0       0       0       0
  2164 ;;      Locals:         4       0       0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0
  2166 ;;      Totals:         8       0       0       0       0       0       0
  2167 ;;Total ram usage:        8 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    1
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_Clock_display
  2174 ;;		_Time_display
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text14
  2179  0008F4                     __ptext14:
  2180                           	opt stack 0
  2181  0008F4                     ___awdiv:
  2182                           	opt stack 28
  2183                           
  2184                           ;incstack = 0
  2185  0008F4  0E00               	movlw	0
  2186  0008F6  6E14               	movwf	___awdiv@sign,c
  2187  0008F8  5012               	movf	___awdiv@divisor+1,w,c
  2188  0008FA  0A80               	xorlw	128
  2189  0008FC  6EF3               	movwf	prodl,c
  2190  0008FE  0E80               	movlw	128
  2191  000900  5CF3               	subwf	prodl,w,c
  2192  000902  0E00               	movlw	0
  2193  000904  B4D8               	btfsc	status,2,c
  2194  000906  5C11               	subwf	___awdiv@divisor,w,c
  2195  000908  B0D8               	btfsc	status,0,c
  2196  00090A  D006               	goto	l927
  2197  00090C  6C11               	negf	___awdiv@divisor,c
  2198  00090E  1E12               	comf	___awdiv@divisor+1,f,c
  2199  000910  B0D8               	btfsc	status,0,c
  2200  000912  2A12               	incf	___awdiv@divisor+1,f,c
  2201  000914  0E01               	movlw	1
  2202  000916  6E14               	movwf	___awdiv@sign,c
  2203  000918                     l927:
  2204  000918  5010               	movf	___awdiv@dividend+1,w,c
  2205  00091A  0A80               	xorlw	128
  2206  00091C  6EF3               	movwf	prodl,c
  2207  00091E  0E80               	movlw	128
  2208  000920  5CF3               	subwf	prodl,w,c
  2209  000922  0E00               	movlw	0
  2210  000924  B4D8               	btfsc	status,2,c
  2211  000926  5C0F               	subwf	___awdiv@dividend,w,c
  2212  000928  B0D8               	btfsc	status,0,c
  2213  00092A  D006               	goto	l933
  2214  00092C  6C0F               	negf	___awdiv@dividend,c
  2215  00092E  1E10               	comf	___awdiv@dividend+1,f,c
  2216  000930  B0D8               	btfsc	status,0,c
  2217  000932  2A10               	incf	___awdiv@dividend+1,f,c
  2218  000934  0E01               	movlw	1
  2219  000936  1A14               	xorwf	___awdiv@sign,f,c
  2220  000938                     l933:
  2221  000938  0E00               	movlw	0
  2222  00093A  6E16               	movwf	___awdiv@quotient+1,c
  2223  00093C  0E00               	movlw	0
  2224  00093E  6E15               	movwf	___awdiv@quotient,c
  2225  000940  5012               	movf	___awdiv@divisor+1,w,c
  2226  000942  1011               	iorwf	___awdiv@divisor,w,c
  2227  000944  B4D8               	btfsc	status,2,c
  2228  000946  D01C               	goto	l955
  2229  000948  0E01               	movlw	1
  2230  00094A  6E13               	movwf	___awdiv@counter,c
  2231  00094C  D004               	goto	l941
  2232  00094E                     l939:
  2233  00094E  90D8               	bcf	status,0,c
  2234  000950  3611               	rlcf	___awdiv@divisor,f,c
  2235  000952  3612               	rlcf	___awdiv@divisor+1,f,c
  2236  000954  2A13               	incf	___awdiv@counter,f,c
  2237  000956                     l941:
  2238  000956  AE12               	btfss	___awdiv@divisor+1,7,c
  2239  000958  D7FA               	goto	l939
  2240  00095A                     l943:
  2241  00095A  90D8               	bcf	status,0,c
  2242  00095C  3615               	rlcf	___awdiv@quotient,f,c
  2243  00095E  3616               	rlcf	___awdiv@quotient+1,f,c
  2244  000960  5011               	movf	___awdiv@divisor,w,c
  2245  000962  5C0F               	subwf	___awdiv@dividend,w,c
  2246  000964  5012               	movf	___awdiv@divisor+1,w,c
  2247  000966  5810               	subwfb	___awdiv@dividend+1,w,c
  2248  000968  A0D8               	btfss	status,0,c
  2249  00096A  D005               	goto	l951
  2250  00096C  5011               	movf	___awdiv@divisor,w,c
  2251  00096E  5E0F               	subwf	___awdiv@dividend,f,c
  2252  000970  5012               	movf	___awdiv@divisor+1,w,c
  2253  000972  5A10               	subwfb	___awdiv@dividend+1,f,c
  2254  000974  8015               	bsf	___awdiv@quotient,0,c
  2255  000976                     l951:
  2256  000976  90D8               	bcf	status,0,c
  2257  000978  3212               	rrcf	___awdiv@divisor+1,f,c
  2258  00097A  3211               	rrcf	___awdiv@divisor,f,c
  2259  00097C  2E13               	decfsz	___awdiv@counter,f,c
  2260  00097E  D7ED               	goto	l943
  2261  000980                     l955:
  2262  000980  5014               	movf	___awdiv@sign,w,c
  2263  000982  B4D8               	btfsc	status,2,c
  2264  000984  D004               	goto	l959
  2265  000986  6C15               	negf	___awdiv@quotient,c
  2266  000988  1E16               	comf	___awdiv@quotient+1,f,c
  2267  00098A  B0D8               	btfsc	status,0,c
  2268  00098C  2A16               	incf	___awdiv@quotient+1,f,c
  2269  00098E                     l959:
  2270  00098E  C015  F00F         	movff	___awdiv@quotient,?___awdiv
  2271  000992  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
  2272  000996  0012               	return	
  2273  000998                     __end_of___awdiv:
  2274                           	opt stack 0
  2275                           tblptru	equ	0xFF8
  2276                           tblptrh	equ	0xFF7
  2277                           tblptrl	equ	0xFF6
  2278                           tablat	equ	0xFF5
  2279                           prodh	equ	0xFF4
  2280                           prodl	equ	0xFF3
  2281                           intcon	equ	0xFF2
  2282                           postinc0	equ	0xFEE
  2283                           wreg	equ	0xFE8
  2284                           status	equ	0xFD8
  2285                           
  2286 ;; *************** function _Clean_screen *****************
  2287 ;; Defined at:
  2288 ;;		line 75 in file "1602.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;		None               void
  2295 ;; Registers used:
  2296 ;;		wreg, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2302 ;;      Params:         0       0       0       0       0       0       0
  2303 ;;      Locals:         0       0       0       0       0       0       0
  2304 ;;      Temps:          0       0       0       0       0       0       0
  2305 ;;      Totals:         0       0       0       0       0       0       0
  2306 ;;Total ram usage:        0 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:    2
  2309 ;; This function calls:
  2310 ;;		_busy_bus
  2311 ;;		_write_com
  2312 ;; This function is called by:
  2313 ;;		_main
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text15
  2318  000E00                     __ptext15:
  2319                           	opt stack 0
  2320  000E00                     _Clean_screen:
  2321                           	opt stack 28
  2322                           
  2323                           ;1602.c: 77: busy_bus();
  2324                           
  2325                           ;incstack = 0
  2326  000E00  ECF7  F006         	call	_busy_bus	;wreg free
  2327                           
  2328                           ;1602.c: 78: write_com(0x01);
  2329  000E04  0E01               	movlw	1
  2330  000E06  ECEE  F006         	call	_write_com
  2331                           
  2332                           ;1602.c: 79: busy_bus();
  2333  000E0A  ECF7  F006         	call	_busy_bus	;wreg free
  2334  000E0E  0012               	return	
  2335  000E10                     __end_of_Clean_screen:
  2336                           	opt stack 0
  2337                           tblptru	equ	0xFF8
  2338                           tblptrh	equ	0xFF7
  2339                           tblptrl	equ	0xFF6
  2340                           tablat	equ	0xFF5
  2341                           prodh	equ	0xFF4
  2342                           prodl	equ	0xFF3
  2343                           intcon	equ	0xFF2
  2344                           postinc0	equ	0xFEE
  2345                           wreg	equ	0xFE8
  2346                           status	equ	0xFD8
  2347                           
  2348 ;; *************** function _write_com *****************
  2349 ;; Defined at:
  2350 ;;		line 31 in file "1602.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  data            1    wreg     unsigned char 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  data            1   14[COMRAM] unsigned char 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;		None               void
  2357 ;; Registers used:
  2358 ;;		wreg
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2364 ;;      Params:         0       0       0       0       0       0       0
  2365 ;;      Locals:         1       0       0       0       0       0       0
  2366 ;;      Temps:          0       0       0       0       0       0       0
  2367 ;;      Totals:         1       0       0       0       0       0       0
  2368 ;;Total ram usage:        1 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    1
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_LCD_init
  2375 ;;		_dispalay
  2376 ;;		_Clean_screen
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           	psect	text16
  2381  000DDC                     __ptext16:
  2382                           	opt stack 0
  2383  000DDC                     _write_com:
  2384                           	opt stack 27
  2385                           
  2386                           ;incstack = 0
  2387                           ;write_com@data stored from wreg
  2388  000DDC  6E0F               	movwf	write_com@data,c
  2389                           
  2390                           ;1602.c: 33: RB5=0;
  2391  000DDE  9A81               	bcf	3969,5,c	;volatile
  2392                           
  2393                           ;1602.c: 34: RB4=0;
  2394  000DE0  9881               	bcf	3969,4,c	;volatile
  2395                           
  2396                           ;1602.c: 35: PORTD=data;
  2397  000DE2  C00F  FF83         	movff	write_com@data,3971	;volatile
  2398                           
  2399                           ;1602.c: 36: RB3=1;
  2400  000DE6  8681               	bsf	3969,3,c	;volatile
  2401  000DE8  F000               	nop		;# 
  2402                           
  2403                           ;1602.c: 38: RB3=0;
  2404  000DEA  9681               	bcf	3969,3,c	;volatile
  2405  000DEC  0012               	return	
  2406  000DEE                     __end_of_write_com:
  2407                           	opt stack 0
  2408                           tblptru	equ	0xFF8
  2409                           tblptrh	equ	0xFF7
  2410                           tblptrl	equ	0xFF6
  2411                           tablat	equ	0xFF5
  2412                           prodh	equ	0xFF4
  2413                           prodl	equ	0xFF3
  2414                           intcon	equ	0xFF2
  2415                           postinc0	equ	0xFEE
  2416                           wreg	equ	0xFE8
  2417                           status	equ	0xFD8
  2418                           
  2419 ;; *************** function _busy_bus *****************
  2420 ;; Defined at:
  2421 ;;		line 21 in file "1602.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;		None
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;		None               void
  2428 ;; Registers used:
  2429 ;;		None
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2435 ;;      Params:         0       0       0       0       0       0       0
  2436 ;;      Locals:         0       0       0       0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0       0       0
  2438 ;;      Totals:         0       0       0       0       0       0       0
  2439 ;;Total ram usage:        0 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    1
  2442 ;; This function calls:
  2443 ;;		Nothing
  2444 ;; This function is called by:
  2445 ;;		_LCD_init
  2446 ;;		_write_data
  2447 ;;		_dispalay
  2448 ;;		_dispalay_string
  2449 ;;		_Clean_screen
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text17
  2454  000DEE                     __ptext17:
  2455                           	opt stack 0
  2456  000DEE                     _busy_bus:
  2457                           	opt stack 27
  2458                           
  2459                           ;1602.c: 23: TRISD7=1;
  2460                           
  2461                           ;incstack = 0
  2462  000DEE  8E95               	bsf	3989,7,c	;volatile
  2463                           
  2464                           ;1602.c: 24: RB5=0;
  2465  000DF0  9A81               	bcf	3969,5,c	;volatile
  2466                           
  2467                           ;1602.c: 25: RB4=1;
  2468  000DF2  8881               	bsf	3969,4,c	;volatile
  2469                           
  2470                           ;1602.c: 26: RB3=1;
  2471  000DF4  8681               	bsf	3969,3,c	;volatile
  2472  000DF6                     l121:
  2473  000DF6  BE83               	btfsc	3971,7,c	;volatile
  2474  000DF8  D7FE               	goto	l121
  2475                           
  2476                           ;1602.c: 28: RB3=0;
  2477  000DFA  9681               	bcf	3969,3,c	;volatile
  2478                           
  2479                           ;1602.c: 29: TRISD7=0;
  2480  000DFC  9E95               	bcf	3989,7,c	;volatile
  2481  000DFE  0012               	return	
  2482  000E00                     __end_of_busy_bus:
  2483                           	opt stack 0
  2484                           tblptru	equ	0xFF8
  2485                           tblptrh	equ	0xFF7
  2486                           tblptrl	equ	0xFF6
  2487                           tablat	equ	0xFF5
  2488                           prodh	equ	0xFF4
  2489                           prodl	equ	0xFF3
  2490                           intcon	equ	0xFF2
  2491                           postinc0	equ	0xFEE
  2492                           wreg	equ	0xFE8
  2493                           status	equ	0xFD8
  2494                           
  2495 ;; *************** function _HighInt *****************
  2496 ;; Defined at:
  2497 ;;		line 85 in file "main.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;		None
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;		None
  2502 ;; Return value:  Size  Location     Type
  2503 ;;		None               void
  2504 ;; Registers used:
  2505 ;;		wreg, status,2, status,0
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2511 ;;      Params:         0       0       0       0       0       0       0
  2512 ;;      Locals:         0       0       0       0       0       0       0
  2513 ;;      Temps:         14       0       0       0       0       0       0
  2514 ;;      Totals:        14       0       0       0       0       0       0
  2515 ;;Total ram usage:       14 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		Interrupt level 2
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	intcode
  2525  000008                     __pintcode:
  2526                           	opt stack 0
  2527  000008                     _HighInt:
  2528                           	opt stack 25
  2529                           
  2530                           ;incstack = 0
  2531  000008  CFFA F001          	movff	pclath,??_HighInt
  2532  00000C  CFFB F002          	movff	pclatu,??_HighInt+1
  2533  000010  CFE9 F003          	movff	fsr0l,??_HighInt+2
  2534  000014  EDCC  F004         	call	int_func,f	;refresh shadow registers
  2535                           pclatu	equ	0xFFB
  2536                           pclath	equ	0xFFA
  2537                           tblptru	equ	0xFF8
  2538                           tblptrh	equ	0xFF7
  2539                           tblptrl	equ	0xFF6
  2540                           tablat	equ	0xFF5
  2541                           prodh	equ	0xFF4
  2542                           prodl	equ	0xFF3
  2543                           intcon	equ	0xFF2
  2544                           postinc0	equ	0xFEE
  2545                           fsr0l	equ	0xFE9
  2546                           wreg	equ	0xFE8
  2547                           status	equ	0xFD8
  2548                           
  2549                           	psect	intcode_body
  2550  000998                     __pintcode_body:
  2551                           	opt stack 25
  2552  000998                     int_func:
  2553                           	opt stack 25
  2554  000998  0006               	pop		; remove dummy address from shadow register refresh
  2555  00099A  CFEA F004          	movff	fsr0h,??_HighInt+3
  2556  00099E  CFE1 F005          	movff	fsr1l,??_HighInt+4
  2557  0009A2  CFE2 F006          	movff	fsr1h,??_HighInt+5
  2558  0009A6  CFD9 F007          	movff	fsr2l,??_HighInt+6
  2559  0009AA  CFDA F008          	movff	fsr2h,??_HighInt+7
  2560  0009AE  CFF3 F009          	movff	prodl,??_HighInt+8
  2561  0009B2  CFF4 F00A          	movff	prodh,??_HighInt+9
  2562  0009B6  CFF6 F00B          	movff	tblptrl,??_HighInt+10
  2563  0009BA  CFF7 F00C          	movff	tblptrh,??_HighInt+11
  2564  0009BE  CFF8 F00D          	movff	tblptru,??_HighInt+12
  2565  0009C2  CFF5 F00E          	movff	tablat,??_HighInt+13
  2566                           
  2567                           ;main.c: 87: if(TMR1IE && TMR1IF && count==2000)
  2568  0009C6  B09D               	btfsc	3997,0,c	;volatile
  2569  0009C8  A09E               	btfss	3998,0,c	;volatile
  2570  0009CA  D010               	goto	i2l83
  2571  0009CC  5023               	movf	_count+1,w,c
  2572  0009CE  0A07               	xorlw	7
  2573  0009D0  0ED0               	movlw	208
  2574  0009D2  B4D8               	btfsc	status,2,c
  2575  0009D4  1822               	xorwf	_count,w,c
  2576  0009D6  A4D8               	btfss	status,2,c
  2577  0009D8  D009               	goto	i2l83
  2578                           
  2579                           ;main.c: 88: {
  2580                           ;main.c: 89: count=0;
  2581  0009DA  0E00               	movlw	0
  2582  0009DC  6E23               	movwf	_count+1,c
  2583  0009DE  0E00               	movlw	0
  2584  0009E0  6E22               	movwf	_count,c
  2585                           
  2586                           ;main.c: 91: sec++;
  2587  0009E2  4A28               	infsnz	_sec,f,c
  2588  0009E4  2A29               	incf	_sec+1,f,c
  2589                           
  2590                           ;main.c: 92: TMR1IF=0;
  2591  0009E6  909E               	bcf	3998,0,c	;volatile
  2592                           
  2593                           ;main.c: 93: TMR1IE=0;
  2594  0009E8  909D               	bcf	3997,0,c	;volatile
  2595  0009EA  D003               	goto	L5
  2596  0009EC                     i2l83:
  2597                           
  2598                           ;main.c: 99: else
  2599                           ;main.c: 100: {
  2600                           ;main.c: 101: TMR1IE=0;
  2601  0009EC  909D               	bcf	3997,0,c	;volatile
  2602                           
  2603                           ;main.c: 102: count++;
  2604  0009EE  4A22               	infsnz	_count,f,c
  2605  0009F0  2A23               	incf	_count+1,f,c
  2606  0009F2                     L5:
  2607                           
  2608                           ;main.c: 103: TMR1H=(65536-62500)/256;
  2609  0009F2  0E0B               	movlw	11
  2610  0009F4  6ECF               	movwf	4047,c	;volatile
  2611                           
  2612                           ;main.c: 104: TMR1L=(65536-62500)%256;
  2613  0009F6  0EDC               	movlw	220
  2614  0009F8  6ECE               	movwf	4046,c	;volatile
  2615                           
  2616                           ;main.c: 105: TMR1IE=1;
  2617  0009FA  809D               	bsf	3997,0,c	;volatile
  2618  0009FC  C00E  FFF5         	movff	??_HighInt+13,tablat
  2619  000A00  C00D  FFF8         	movff	??_HighInt+12,tblptru
  2620  000A04  C00C  FFF7         	movff	??_HighInt+11,tblptrh
  2621  000A08  C00B  FFF6         	movff	??_HighInt+10,tblptrl
  2622  000A0C  C00A  FFF4         	movff	??_HighInt+9,prodh
  2623  000A10  C009  FFF3         	movff	??_HighInt+8,prodl
  2624  000A14  C008  FFDA         	movff	??_HighInt+7,fsr2h
  2625  000A18  C007  FFD9         	movff	??_HighInt+6,fsr2l
  2626  000A1C  C006  FFE2         	movff	??_HighInt+5,fsr1h
  2627  000A20  C005  FFE1         	movff	??_HighInt+4,fsr1l
  2628  000A24  C004  FFEA         	movff	??_HighInt+3,fsr0h
  2629  000A28  C003  FFE9         	movff	??_HighInt+2,fsr0l
  2630  000A2C  C002  FFFB         	movff	??_HighInt+1,pclatu
  2631  000A30  C001  FFFA         	movff	??_HighInt,pclath
  2632  000A34  0011               	retfie		f
  2633  000A36                     __end_of_HighInt:
  2634                           	opt stack 0
  2635                           pclatu	equ	0xFFB
  2636                           pclath	equ	0xFFA
  2637                           tblptru	equ	0xFF8
  2638                           tblptrh	equ	0xFF7
  2639                           tblptrl	equ	0xFF6
  2640                           tablat	equ	0xFF5
  2641                           prodh	equ	0xFF4
  2642                           prodl	equ	0xFF3
  2643                           intcon	equ	0xFF2
  2644                           postinc0	equ	0xFEE
  2645                           fsr0h	equ	0xFEA
  2646                           fsr0l	equ	0xFE9
  2647                           wreg	equ	0xFE8
  2648                           fsr1h	equ	0xFE2
  2649                           fsr1l	equ	0xFE1
  2650                           fsr2h	equ	0xFDA
  2651                           fsr2l	equ	0xFD9
  2652                           status	equ	0xFD8
  2653                           pclatu	equ	0xFFB
  2654                           pclath	equ	0xFFA
  2655                           tblptru	equ	0xFF8
  2656                           tblptrh	equ	0xFF7
  2657                           tblptrl	equ	0xFF6
  2658                           tablat	equ	0xFF5
  2659                           prodh	equ	0xFF4
  2660                           prodl	equ	0xFF3
  2661                           intcon	equ	0xFF2
  2662                           postinc0	equ	0xFEE
  2663                           fsr0h	equ	0xFEA
  2664                           fsr0l	equ	0xFE9
  2665                           wreg	equ	0xFE8
  2666                           fsr1h	equ	0xFE2
  2667                           fsr1l	equ	0xFE1
  2668                           fsr2h	equ	0xFDA
  2669                           fsr2l	equ	0xFD9
  2670                           status	equ	0xFD8
  2671                           
  2672                           	psect	rparam
  2673  0000                     pclatu	equ	0xFFB
  2674                           pclath	equ	0xFFA
  2675                           tblptru	equ	0xFF8
  2676                           tblptrh	equ	0xFF7
  2677                           tblptrl	equ	0xFF6
  2678                           tablat	equ	0xFF5
  2679                           prodh	equ	0xFF4
  2680                           prodl	equ	0xFF3
  2681                           intcon	equ	0xFF2
  2682                           postinc0	equ	0xFEE
  2683                           fsr0h	equ	0xFEA
  2684                           fsr0l	equ	0xFE9
  2685                           wreg	equ	0xFE8
  2686                           fsr1h	equ	0xFE2
  2687                           fsr1l	equ	0xFE1
  2688                           fsr2h	equ	0xFDA
  2689                           fsr2l	equ	0xFD9
  2690                           status	equ	0xFD8


Data Sizes:
    Strings     41
    Constant    16
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     33      43
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    dispalay_string@sp	PTR unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[5]), STR_5(CODE[4]), STR_4(CODE[5]), STR_3(CODE[10]), 
		 -> STR_2(CODE[10]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_Time_display
    _Time_display->_dispalay_string
    _read_T->_Read_bit
    _read_T->_Write_bit
    _ConvertT->_Write_bit
    _LCD_init->_write_com
    _Clock_display->_dispalay_string
    _dispalay_string->_dispalay
    _dispalay->___awdiv
    _Clean_screen->_write_com

Critical Paths under _HighInt in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighInt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighInt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighInt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighInt in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   10122
                       _Clean_screen
                      _Clock_display
                           _LCD_init
                       _Time_display
                            ___awmod
                          ___delay_s
                    _dispalay_string
 ---------------------------------------------------------------------------------
 (1) ___delay_s                                            5     3      2     103
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Time_display                                         2     2      0    4026
                                             31 COMRAM     2     2      0
                           _ConvertT
                            ___awdiv
                            ___awmod
                           _dispalay
                    _dispalay_string
                             _read_T
 ---------------------------------------------------------------------------------
 (2) _read_T                                               3     3      0     180
                                             17 COMRAM     3     3      0
                           _Read_bit
                          _Write_bit
                              _reset
 ---------------------------------------------------------------------------------
 (3) _Read_bit                                             3     3      0      45
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ConvertT                                             1     1      0      90
                                             17 COMRAM     1     1      0
                          _Write_bit
                              _reset
 ---------------------------------------------------------------------------------
 (3) _reset                                                1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Write_bit                                            3     3      0      75
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0      15
                                             15 COMRAM     1     1      0
                           _busy_bus
                          _write_com
 ---------------------------------------------------------------------------------
 (1) _Clock_display                                        0     0      0    3711
                            ___awdiv
                            ___awmod
                           _dispalay
                    _dispalay_string
 ---------------------------------------------------------------------------------
 (1) _dispalay_string                                      7     4      3    1369
                                             24 COMRAM     7     4      3
                           _busy_bus
                           _dispalay
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _dispalay                                             2     1      1     748
                                             22 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           _busy_bus
                          _write_com
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _write_data                                           1     1      0      15
                                             14 COMRAM     1     1      0
                           _busy_bus
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     883
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     711
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Clean_screen                                         0     0      0      15
                           _busy_bus
                          _write_com
 ---------------------------------------------------------------------------------
 (3) _write_com                                            1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _busy_bus                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighInt                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clean_screen
     _busy_bus
     _write_com
   _Clock_display
     ___awdiv
     ___awmod
     _dispalay
       ___awdiv (ARG)
       ___awmod (ARG)
       _busy_bus (ARG)
       _write_com (ARG)
       _write_data (ARG)
         _busy_bus
     _dispalay_string
       _busy_bus
       _dispalay
         ___awdiv (ARG)
         ___awmod (ARG)
         _busy_bus (ARG)
         _write_com (ARG)
         _write_data (ARG)
           _busy_bus
       _write_data
         _busy_bus
   _LCD_init
     _busy_bus
     _write_com
   _Time_display
     _ConvertT
       _Write_bit
       _reset
     ___awdiv
     ___awmod
     _dispalay
       ___awdiv (ARG)
       ___awmod (ARG)
       _busy_bus (ARG)
       _write_com (ARG)
       _write_data (ARG)
         _busy_bus
     _dispalay_string
       _busy_bus
       _dispalay
         ___awdiv (ARG)
         ___awmod (ARG)
         _busy_bus (ARG)
         _write_com (ARG)
         _write_data (ARG)
           _busy_bus
       _write_data
         _busy_bus
     _read_T
       _Read_bit
       _Write_bit
       _reset
   ___awmod
   ___delay_s
   _dispalay_string
     _busy_bus
     _dispalay
       ___awdiv (ARG)
       ___awmod (ARG)
       _busy_bus (ARG)
       _write_com (ARG)
       _write_data (ARG)
         _busy_bus
     _write_data
       _busy_bus

 _HighInt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     21      2B       1       33.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2B      15        0.0%
DATA                 0      0      2B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Apr 11 23:17:26 2015

     __end_of_Clean_screen 0E10                         l80 0CCA                         l97 07D4  
             ___awdiv@sign 0014                        l121 0DF6                        l175 0DC4  
                      l179 0D08                        l803 0D66                        l905 0C10  
                      l817 0D12                        l941 0956                        l933 0938  
                      l951 0976                        l943 095A                        l927 0918  
                      l939 094E                        l955 0980                        l971 0A5A  
                      l891 0C7E                        l981 0A8C                        l959 098E  
                      l983 0A90                        l991 0AAE                        l975 0A76  
                      l995 0ABC                        l987 0AA4                        l979 0A84  
                      l899 0BE8                        _RC0 007C10                        _RA4 007C04  
                      _RB3 007C0B                        _RB4 007C0C                        _RB5 007C0D  
                      _RD7 007C1F                        u417 0CB4                        u507 0B86  
                      u427 0656                        u437 0C74                        u447 0D4E  
                      u457 0D58                        u467 0D6C                        u477 0D2E  
                      u487 0B5A                        u497 0B70                        _min 0026  
                      _sec 0028               ___awmod@sign 0014                        wreg 000FE8  
         ?_dispalay_string 0019              write_com@data 000F                       l1101 076E  
                     l1031 0802                       l1107 07C4                       l1123 0CC2  
                     l1037 081E                       l1151 0AF0                       l1163 0B28  
                     l1177 0B50                       STR_1 0625                       STR_2 0611  
                     STR_3 061B                       STR_4 0631                       STR_5 0636  
                     STR_6 062C                       _GIEH 007F97                       _IPEN 007E87  
                     i2l83 09EC                       _main 0AC6                       _hour 0024  
                     fsr0h 000FEA                       fsr1h 000FE2                       fsr0l 000FE9  
                     fsr2h 000FDA                       fsr1l 000FE1                       fsr2l 000FD9  
                     pclat 000FFA                       prodh 000FF4                       prodl 000FF3  
                     start 0018             write_data@data 000F            __end_of_HighInt 0A36  
             dispalay@data 0017           __end_of_LCD_init 0BCA                      ?_main 0001  
          __end_of___awdiv 0998            __end_of___awmod 0AC6            ___awdiv@divisor 0011  
                    _T1CON 000FCD            ___awdiv@counter 0013                      _TMR1H 000FCF  
                    _TMR1L 000FCE                      _PORTC 000F82                      _PORTD 000F83  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95                      _Temp1 002A                      _Temp2 002B  
                    _count 0022                      _reset 0D48                      tablat 000FF5  
                    status 000FD8            __initialization 0D92               __end_of_main 0B54  
         __end_of_ConvertT 0DC6           __end_of_Read_bit 0C82                     ??_main 0022  
            __activetblptr 000001                     _ADCON1 000FC1                     ?_reset 0001  
         ___awdiv@dividend 000F      __end_of_Clock_display 08F4                     _TMR1IE 007CE8  
                   _TMR1IF 007CF0                     _TMR1IP 007CF8                  ??_HighInt 0001  
                   _TRISA4 007C94                     _TRISD7 007CAF      __size_of_Clean_screen 0010  
         __end_of_dispalay 0D92                  ??___awdiv 0013                  ??___awmod 0013  
         __end_of_busy_bus 0E00                     _read_T 0CCC                     clear_0 0D98  
         ___awdiv@quotient 0015            ___awmod@divisor 0011            ___awmod@counter 0013  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8         __size_of___delay_s 004A               _Clean_screen 0E00  
               __accesstop 0080    __end_of__initialization 0D9E                  ?_LCD_init 0001  
       __size_of_Write_bit 003E             __pcstackCOMRAM 0001              __end_of_reset 0D76  
          Time_display@buf 0021                    ??_reset 000F                  ?_ConvertT 0001  
                ?_Read_bit 0001                 ??_LCD_init 0010                 Write_bit@i 0011  
               Write_bit@k 000F          __end_of___delay_s 0CCC                    ?_read_T 0001  
            ?_Time_display 0001          __end_of_Write_bit 0D48                  ?_dispalay 0017  
               ??_ConvertT 0012                  ?_busy_bus 0001                    _HighInt 0008  
               ??_Read_bit 000F   __size_of_dispalay_string 006A         __size_of_write_com 0012  
                  __Hparam 0000                    __Lparam 0000                    ___awdiv 08F4  
                  ___awmod 0A36               __psmallconst 0600                    __pcinit 0D92  
          __size_of_read_T 003E                    __ramtop 0600                    __ptext0 0AC6  
                  __ptext1 0C82                    __ptext2 063C                    __ptext3 0CCC  
                  __ptext4 0C34                    __ptext5 0DAC                    __ptext6 0D48  
                  __ptext7 0D0A                    __ptext8 0B54                    __ptext9 07D6  
           ??_Time_display 0020           ___awmod@dividend 000F          __end_of_tablexiao 0611  
               ??_dispalay 0018             __pintcode_body 0998       end_of_initialization 0D9E  
               ??_busy_bus 000F                    int_func 0998                    postinc0 000FEE  
              ___delay_s@i 0012                ___delay_s@t 000F          __end_of_write_com 0DEE  
        __size_of_LCD_init 0076                  Read_bit@i 0010                  Read_bit@k 000F  
        ??_dispalay_string 001C                 _write_data 0DC6     __size_of_Clock_display 011E  
           __end_of_read_T 0D0A  dispalay_string@start_addr 001B        start_initialization 0D92  
dispalay_string@str_length 001E          __size_of_ConvertT 001A       __end_of_Time_display 07D6  
        __size_of_Read_bit 004E          dispalay_string@sp 0019                   ??_read_T 0012  
                ___delay_s 0C82                __pbssCOMRAM 0022        __end_of__stringdata 063A  
                _Write_bit 0D0A              _Clock_display 07D6          __size_of_dispalay 001C  
                 ?_HighInt 0001          __size_of_busy_bus 0012                  __pintcode 0008  
                 ?___awdiv 000F                   ?___awmod 000F                ?_write_data 0001  
               ?___delay_s 000F                __smallconst 0600              Write_bit@data 0010  
               ?_Write_bit 0001             __size_of_reset 002E             ?_Clock_display 0001  
                _tablexiao 0601                   _LCD_init 0B54                __stringdata 0611  
                dispalay@x 0018                  _write_com 0DDC              ?_Clean_screen 0001  
    __size_of_Time_display 019A                   _ConvertT 0DAC            _dispalay_string 0BCA  
      __size_of_write_data 0016                   _Read_bit 0C34           __size_of_HighInt 0A2E  
                read_T@LSB 0014                  read_T@MSB 0013                   __Hrparam 0000  
                 __Lrparam 0000               __Lsmallconst 0600           __size_of___awdiv 00A4  
         __size_of___awmod 0090                ??___delay_s 0011               _Time_display 063C  
                 __ptext10 0BCA                   __ptext11 0D76                   __ptext12 0DC6  
                 __ptext13 0A36                   __ptext14 08F4                   __ptext15 0E00  
                 __ptext16 0DDC                   __ptext17 0DEE             ??_Clean_screen 0010  
              ??_Write_bit 000F            ??_Clock_display 0020                 ?_write_com 0001  
                 _dispalay 0D76                   _busy_bus 0DEE              __size_of_main 008E  
  __end_of_dispalay_string 0C34                   intlevel2 0000                   reset@out 000F  
             ??_write_data 000F                ??_write_com 000F         __end_of_write_data 0DDC  
